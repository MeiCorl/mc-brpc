// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/trackme.proto

#include "brpc/trackme.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace brpc {
class TrackMeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrackMeRequest>
      _instance;
} _TrackMeRequest_default_instance_;
class TrackMeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrackMeResponse>
      _instance;
} _TrackMeResponse_default_instance_;
}  // namespace brpc
namespace protobuf_brpc_2ftrackme_2eproto {
static void InitDefaultsTrackMeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_TrackMeRequest_default_instance_;
    new (ptr) ::brpc::TrackMeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::TrackMeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrackMeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrackMeRequest}, {}};

static void InitDefaultsTrackMeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_TrackMeResponse_default_instance_;
    new (ptr) ::brpc::TrackMeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::TrackMeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrackMeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrackMeResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TrackMeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrackMeResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeRequest, rpc_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeRequest, server_addr_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeResponse, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeResponse, error_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::TrackMeResponse, new_interval_),
  1,
  0,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::brpc::TrackMeRequest)},
  { 9, 17, sizeof(::brpc::TrackMeResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_TrackMeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_TrackMeResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "brpc/trackme.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022brpc/trackme.proto\022\004brpc\":\n\016TrackMeReq"
      "uest\022\023\n\013rpc_version\030\001 \001(\003\022\023\n\013server_addr"
      "\030\002 \001(\t\"d\n\017TrackMeResponse\022\'\n\010severity\030\001 "
      "\001(\0162\025.brpc.TrackMeSeverity\022\022\n\nerror_text"
      "\030\002 \001(\t\022\024\n\014new_interval\030\003 \001(\005*F\n\017TrackMeS"
      "everity\022\r\n\tTrackMeOK\020\000\022\022\n\016TrackMeWarning"
      "\020\001\022\020\n\014TrackMeFatal\020\0022H\n\016TrackMeService\0226"
      "\n\007TrackMe\022\024.brpc.TrackMeRequest\032\025.brpc.T"
      "rackMeResponseB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 339);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "brpc/trackme.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_brpc_2ftrackme_2eproto
namespace brpc {
const ::google::protobuf::EnumDescriptor* TrackMeSeverity_descriptor() {
  protobuf_brpc_2ftrackme_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2ftrackme_2eproto::file_level_enum_descriptors[0];
}
bool TrackMeSeverity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TrackMeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackMeRequest::kRpcVersionFieldNumber;
const int TrackMeRequest::kServerAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackMeRequest::TrackMeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2ftrackme_2eproto::scc_info_TrackMeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.TrackMeRequest)
}
TrackMeRequest::TrackMeRequest(const TrackMeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_server_addr()) {
    server_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_addr_);
  }
  rpc_version_ = from.rpc_version_;
  // @@protoc_insertion_point(copy_constructor:brpc.TrackMeRequest)
}

void TrackMeRequest::SharedCtor() {
  server_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpc_version_ = GOOGLE_LONGLONG(0);
}

TrackMeRequest::~TrackMeRequest() {
  // @@protoc_insertion_point(destructor:brpc.TrackMeRequest)
  SharedDtor();
}

void TrackMeRequest::SharedDtor() {
  server_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrackMeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TrackMeRequest::descriptor() {
  ::protobuf_brpc_2ftrackme_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2ftrackme_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrackMeRequest& TrackMeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2ftrackme_2eproto::scc_info_TrackMeRequest.base);
  return *internal_default_instance();
}


void TrackMeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.TrackMeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    server_addr_.ClearNonDefaultToEmptyNoArena();
  }
  rpc_version_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrackMeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.TrackMeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 rpc_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rpc_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rpc_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string server_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_addr().data(), static_cast<int>(this->server_addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.TrackMeRequest.server_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.TrackMeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.TrackMeRequest)
  return false;
#undef DO_
}

void TrackMeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.TrackMeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 rpc_version = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->rpc_version(), output);
  }

  // optional string server_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_addr().data(), static_cast<int>(this->server_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.TrackMeRequest.server_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.TrackMeRequest)
}

::google::protobuf::uint8* TrackMeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.TrackMeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 rpc_version = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->rpc_version(), target);
  }

  // optional string server_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_addr().data(), static_cast<int>(this->server_addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.TrackMeRequest.server_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.TrackMeRequest)
  return target;
}

size_t TrackMeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.TrackMeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string server_addr = 2;
    if (has_server_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_addr());
    }

    // optional int64 rpc_version = 1;
    if (has_rpc_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rpc_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrackMeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.TrackMeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackMeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackMeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.TrackMeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.TrackMeRequest)
    MergeFrom(*source);
  }
}

void TrackMeRequest::MergeFrom(const TrackMeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.TrackMeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_server_addr();
      server_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      rpc_version_ = from.rpc_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TrackMeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.TrackMeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackMeRequest::CopyFrom(const TrackMeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.TrackMeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackMeRequest::IsInitialized() const {
  return true;
}

void TrackMeRequest::Swap(TrackMeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackMeRequest::InternalSwap(TrackMeRequest* other) {
  using std::swap;
  server_addr_.Swap(&other->server_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rpc_version_, other->rpc_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TrackMeRequest::GetMetadata() const {
  protobuf_brpc_2ftrackme_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2ftrackme_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TrackMeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackMeResponse::kSeverityFieldNumber;
const int TrackMeResponse::kErrorTextFieldNumber;
const int TrackMeResponse::kNewIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackMeResponse::TrackMeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2ftrackme_2eproto::scc_info_TrackMeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.TrackMeResponse)
}
TrackMeResponse::TrackMeResponse(const TrackMeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_text()) {
    error_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_text_);
  }
  ::memcpy(&severity_, &from.severity_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_interval_) -
    reinterpret_cast<char*>(&severity_)) + sizeof(new_interval_));
  // @@protoc_insertion_point(copy_constructor:brpc.TrackMeResponse)
}

void TrackMeResponse::SharedCtor() {
  error_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&severity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_interval_) -
      reinterpret_cast<char*>(&severity_)) + sizeof(new_interval_));
}

TrackMeResponse::~TrackMeResponse() {
  // @@protoc_insertion_point(destructor:brpc.TrackMeResponse)
  SharedDtor();
}

void TrackMeResponse::SharedDtor() {
  error_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrackMeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TrackMeResponse::descriptor() {
  ::protobuf_brpc_2ftrackme_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2ftrackme_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrackMeResponse& TrackMeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2ftrackme_2eproto::scc_info_TrackMeResponse.base);
  return *internal_default_instance();
}


void TrackMeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.TrackMeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&severity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&new_interval_) -
        reinterpret_cast<char*>(&severity_)) + sizeof(new_interval_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrackMeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.TrackMeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .brpc.TrackMeSeverity severity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::brpc::TrackMeSeverity_IsValid(value)) {
            set_severity(static_cast< ::brpc::TrackMeSeverity >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_text().data(), static_cast<int>(this->error_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.TrackMeResponse.error_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 new_interval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_new_interval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.TrackMeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.TrackMeResponse)
  return false;
#undef DO_
}

void TrackMeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.TrackMeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .brpc.TrackMeSeverity severity = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->severity(), output);
  }

  // optional string error_text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_text().data(), static_cast<int>(this->error_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.TrackMeResponse.error_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_text(), output);
  }

  // optional int32 new_interval = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->new_interval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.TrackMeResponse)
}

::google::protobuf::uint8* TrackMeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.TrackMeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .brpc.TrackMeSeverity severity = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->severity(), target);
  }

  // optional string error_text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_text().data(), static_cast<int>(this->error_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.TrackMeResponse.error_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_text(), target);
  }

  // optional int32 new_interval = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->new_interval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.TrackMeResponse)
  return target;
}

size_t TrackMeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.TrackMeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string error_text = 2;
    if (has_error_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_text());
    }

    // optional .brpc.TrackMeSeverity severity = 1;
    if (has_severity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
    }

    // optional int32 new_interval = 3;
    if (has_new_interval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_interval());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrackMeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.TrackMeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackMeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackMeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.TrackMeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.TrackMeResponse)
    MergeFrom(*source);
  }
}

void TrackMeResponse::MergeFrom(const TrackMeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.TrackMeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_text();
      error_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      severity_ = from.severity_;
    }
    if (cached_has_bits & 0x00000004u) {
      new_interval_ = from.new_interval_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TrackMeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.TrackMeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackMeResponse::CopyFrom(const TrackMeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.TrackMeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackMeResponse::IsInitialized() const {
  return true;
}

void TrackMeResponse::Swap(TrackMeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackMeResponse::InternalSwap(TrackMeResponse* other) {
  using std::swap;
  error_text_.Swap(&other->error_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(severity_, other->severity_);
  swap(new_interval_, other->new_interval_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TrackMeResponse::GetMetadata() const {
  protobuf_brpc_2ftrackme_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2ftrackme_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TrackMeService::~TrackMeService() {}

const ::google::protobuf::ServiceDescriptor* TrackMeService::descriptor() {
  protobuf_brpc_2ftrackme_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2ftrackme_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* TrackMeService::GetDescriptor() {
  return descriptor();
}

void TrackMeService::TrackMe(::google::protobuf::RpcController* controller,
                         const ::brpc::TrackMeRequest*,
                         ::brpc::TrackMeResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method TrackMe() not implemented.");
  done->Run();
}

void TrackMeService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2ftrackme_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      TrackMe(controller,
             ::google::protobuf::down_cast<const ::brpc::TrackMeRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::TrackMeResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& TrackMeService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::TrackMeRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& TrackMeService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::TrackMeResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

TrackMeService_Stub::TrackMeService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
TrackMeService_Stub::TrackMeService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
TrackMeService_Stub::~TrackMeService_Stub() {
  if (owns_channel_) delete channel_;
}

void TrackMeService_Stub::TrackMe(::google::protobuf::RpcController* controller,
                              const ::brpc::TrackMeRequest* request,
                              ::brpc::TrackMeResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace brpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::TrackMeRequest* Arena::CreateMaybeMessage< ::brpc::TrackMeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::TrackMeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::TrackMeResponse* Arena::CreateMaybeMessage< ::brpc::TrackMeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::TrackMeResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

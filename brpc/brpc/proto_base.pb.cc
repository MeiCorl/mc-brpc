// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/proto_base.proto

#include "brpc/proto_base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace brpc {
class RedisRequestBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RedisRequestBase>
      _instance;
} _RedisRequestBase_default_instance_;
class RedisResponseBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RedisResponseBase>
      _instance;
} _RedisResponseBase_default_instance_;
class EspMessageBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EspMessageBase>
      _instance;
} _EspMessageBase_default_instance_;
class MemcacheRequestBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemcacheRequestBase>
      _instance;
} _MemcacheRequestBase_default_instance_;
class MemcacheResponseBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemcacheResponseBase>
      _instance;
} _MemcacheResponseBase_default_instance_;
class NsheadMessageBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NsheadMessageBase>
      _instance;
} _NsheadMessageBase_default_instance_;
class SerializedRequestBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedRequestBase>
      _instance;
} _SerializedRequestBase_default_instance_;
class ThriftFramedMessageBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThriftFramedMessageBase>
      _instance;
} _ThriftFramedMessageBase_default_instance_;
}  // namespace brpc
namespace protobuf_brpc_2fproto_5fbase_2eproto {
static void InitDefaultsRedisRequestBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RedisRequestBase_default_instance_;
    new (ptr) ::brpc::RedisRequestBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RedisRequestBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RedisRequestBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRedisRequestBase}, {}};

static void InitDefaultsRedisResponseBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RedisResponseBase_default_instance_;
    new (ptr) ::brpc::RedisResponseBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RedisResponseBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RedisResponseBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRedisResponseBase}, {}};

static void InitDefaultsEspMessageBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_EspMessageBase_default_instance_;
    new (ptr) ::brpc::EspMessageBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::EspMessageBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EspMessageBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEspMessageBase}, {}};

static void InitDefaultsMemcacheRequestBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_MemcacheRequestBase_default_instance_;
    new (ptr) ::brpc::MemcacheRequestBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::MemcacheRequestBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemcacheRequestBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemcacheRequestBase}, {}};

static void InitDefaultsMemcacheResponseBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_MemcacheResponseBase_default_instance_;
    new (ptr) ::brpc::MemcacheResponseBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::MemcacheResponseBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemcacheResponseBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemcacheResponseBase}, {}};

static void InitDefaultsNsheadMessageBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_NsheadMessageBase_default_instance_;
    new (ptr) ::brpc::NsheadMessageBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::NsheadMessageBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NsheadMessageBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNsheadMessageBase}, {}};

static void InitDefaultsSerializedRequestBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_SerializedRequestBase_default_instance_;
    new (ptr) ::brpc::SerializedRequestBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::SerializedRequestBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SerializedRequestBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSerializedRequestBase}, {}};

static void InitDefaultsThriftFramedMessageBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ThriftFramedMessageBase_default_instance_;
    new (ptr) ::brpc::ThriftFramedMessageBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ThriftFramedMessageBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ThriftFramedMessageBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThriftFramedMessageBase}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RedisRequestBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RedisResponseBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EspMessageBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemcacheRequestBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemcacheResponseBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NsheadMessageBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedRequestBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ThriftFramedMessageBase.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RedisRequestBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RedisRequestBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RedisResponseBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RedisResponseBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::EspMessageBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::EspMessageBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::MemcacheRequestBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::MemcacheRequestBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::MemcacheResponseBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::MemcacheResponseBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::NsheadMessageBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::NsheadMessageBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::SerializedRequestBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::SerializedRequestBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ThriftFramedMessageBase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ThriftFramedMessageBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::brpc::RedisRequestBase)},
  { 5, 10, sizeof(::brpc::RedisResponseBase)},
  { 10, 15, sizeof(::brpc::EspMessageBase)},
  { 15, 20, sizeof(::brpc::MemcacheRequestBase)},
  { 20, 25, sizeof(::brpc::MemcacheResponseBase)},
  { 25, 30, sizeof(::brpc::NsheadMessageBase)},
  { 30, 35, sizeof(::brpc::SerializedRequestBase)},
  { 35, 40, sizeof(::brpc::ThriftFramedMessageBase)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RedisRequestBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RedisResponseBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_EspMessageBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_MemcacheRequestBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_MemcacheResponseBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_NsheadMessageBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_SerializedRequestBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ThriftFramedMessageBase_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "brpc/proto_base.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025brpc/proto_base.proto\022\004brpc\"\022\n\020RedisRe"
      "questBase\"\023\n\021RedisResponseBase\"\020\n\016EspMes"
      "sageBase\"\025\n\023MemcacheRequestBase\"\026\n\024Memca"
      "cheResponseBase\"\023\n\021NsheadMessageBase\"\027\n\025"
      "SerializedRequestBase\"\031\n\027ThriftFramedMes"
      "sageBase"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 208);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "brpc/proto_base.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_brpc_2fproto_5fbase_2eproto
namespace brpc {

// ===================================================================

void RedisRequestBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedisRequestBase::RedisRequestBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fproto_5fbase_2eproto::scc_info_RedisRequestBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RedisRequestBase)
}
RedisRequestBase::RedisRequestBase(const RedisRequestBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.RedisRequestBase)
}

void RedisRequestBase::SharedCtor() {
}

RedisRequestBase::~RedisRequestBase() {
  // @@protoc_insertion_point(destructor:brpc.RedisRequestBase)
  SharedDtor();
}

void RedisRequestBase::SharedDtor() {
}

void RedisRequestBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RedisRequestBase::descriptor() {
  ::protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedisRequestBase& RedisRequestBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fproto_5fbase_2eproto::scc_info_RedisRequestBase.base);
  return *internal_default_instance();
}


void RedisRequestBase::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RedisRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedisRequestBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RedisRequestBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RedisRequestBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RedisRequestBase)
  return false;
#undef DO_
}

void RedisRequestBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RedisRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RedisRequestBase)
}

::google::protobuf::uint8* RedisRequestBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RedisRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RedisRequestBase)
  return target;
}

size_t RedisRequestBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RedisRequestBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RedisRequestBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RedisRequestBase)
  GOOGLE_DCHECK_NE(&from, this);
  const RedisRequestBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedisRequestBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RedisRequestBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RedisRequestBase)
    MergeFrom(*source);
  }
}

void RedisRequestBase::MergeFrom(const RedisRequestBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RedisRequestBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RedisRequestBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RedisRequestBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedisRequestBase::CopyFrom(const RedisRequestBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RedisRequestBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedisRequestBase::IsInitialized() const {
  return true;
}

void RedisRequestBase::Swap(RedisRequestBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedisRequestBase::InternalSwap(RedisRequestBase* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RedisRequestBase::GetMetadata() const {
  protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RedisResponseBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedisResponseBase::RedisResponseBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fproto_5fbase_2eproto::scc_info_RedisResponseBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RedisResponseBase)
}
RedisResponseBase::RedisResponseBase(const RedisResponseBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.RedisResponseBase)
}

void RedisResponseBase::SharedCtor() {
}

RedisResponseBase::~RedisResponseBase() {
  // @@protoc_insertion_point(destructor:brpc.RedisResponseBase)
  SharedDtor();
}

void RedisResponseBase::SharedDtor() {
}

void RedisResponseBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RedisResponseBase::descriptor() {
  ::protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedisResponseBase& RedisResponseBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fproto_5fbase_2eproto::scc_info_RedisResponseBase.base);
  return *internal_default_instance();
}


void RedisResponseBase::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RedisResponseBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RedisResponseBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RedisResponseBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RedisResponseBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RedisResponseBase)
  return false;
#undef DO_
}

void RedisResponseBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RedisResponseBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RedisResponseBase)
}

::google::protobuf::uint8* RedisResponseBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RedisResponseBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RedisResponseBase)
  return target;
}

size_t RedisResponseBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RedisResponseBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RedisResponseBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RedisResponseBase)
  GOOGLE_DCHECK_NE(&from, this);
  const RedisResponseBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedisResponseBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RedisResponseBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RedisResponseBase)
    MergeFrom(*source);
  }
}

void RedisResponseBase::MergeFrom(const RedisResponseBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RedisResponseBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RedisResponseBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RedisResponseBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedisResponseBase::CopyFrom(const RedisResponseBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RedisResponseBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedisResponseBase::IsInitialized() const {
  return true;
}

void RedisResponseBase::Swap(RedisResponseBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedisResponseBase::InternalSwap(RedisResponseBase* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RedisResponseBase::GetMetadata() const {
  protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EspMessageBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EspMessageBase::EspMessageBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fproto_5fbase_2eproto::scc_info_EspMessageBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.EspMessageBase)
}
EspMessageBase::EspMessageBase(const EspMessageBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.EspMessageBase)
}

void EspMessageBase::SharedCtor() {
}

EspMessageBase::~EspMessageBase() {
  // @@protoc_insertion_point(destructor:brpc.EspMessageBase)
  SharedDtor();
}

void EspMessageBase::SharedDtor() {
}

void EspMessageBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EspMessageBase::descriptor() {
  ::protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EspMessageBase& EspMessageBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fproto_5fbase_2eproto::scc_info_EspMessageBase.base);
  return *internal_default_instance();
}


void EspMessageBase::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.EspMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EspMessageBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.EspMessageBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.EspMessageBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.EspMessageBase)
  return false;
#undef DO_
}

void EspMessageBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.EspMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.EspMessageBase)
}

::google::protobuf::uint8* EspMessageBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.EspMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.EspMessageBase)
  return target;
}

size_t EspMessageBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.EspMessageBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EspMessageBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.EspMessageBase)
  GOOGLE_DCHECK_NE(&from, this);
  const EspMessageBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EspMessageBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.EspMessageBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.EspMessageBase)
    MergeFrom(*source);
  }
}

void EspMessageBase::MergeFrom(const EspMessageBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.EspMessageBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EspMessageBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.EspMessageBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EspMessageBase::CopyFrom(const EspMessageBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.EspMessageBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EspMessageBase::IsInitialized() const {
  return true;
}

void EspMessageBase::Swap(EspMessageBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EspMessageBase::InternalSwap(EspMessageBase* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EspMessageBase::GetMetadata() const {
  protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemcacheRequestBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemcacheRequestBase::MemcacheRequestBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fproto_5fbase_2eproto::scc_info_MemcacheRequestBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.MemcacheRequestBase)
}
MemcacheRequestBase::MemcacheRequestBase(const MemcacheRequestBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.MemcacheRequestBase)
}

void MemcacheRequestBase::SharedCtor() {
}

MemcacheRequestBase::~MemcacheRequestBase() {
  // @@protoc_insertion_point(destructor:brpc.MemcacheRequestBase)
  SharedDtor();
}

void MemcacheRequestBase::SharedDtor() {
}

void MemcacheRequestBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemcacheRequestBase::descriptor() {
  ::protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemcacheRequestBase& MemcacheRequestBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fproto_5fbase_2eproto::scc_info_MemcacheRequestBase.base);
  return *internal_default_instance();
}


void MemcacheRequestBase::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.MemcacheRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemcacheRequestBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.MemcacheRequestBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.MemcacheRequestBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.MemcacheRequestBase)
  return false;
#undef DO_
}

void MemcacheRequestBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.MemcacheRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.MemcacheRequestBase)
}

::google::protobuf::uint8* MemcacheRequestBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.MemcacheRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.MemcacheRequestBase)
  return target;
}

size_t MemcacheRequestBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.MemcacheRequestBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemcacheRequestBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.MemcacheRequestBase)
  GOOGLE_DCHECK_NE(&from, this);
  const MemcacheRequestBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemcacheRequestBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.MemcacheRequestBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.MemcacheRequestBase)
    MergeFrom(*source);
  }
}

void MemcacheRequestBase::MergeFrom(const MemcacheRequestBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.MemcacheRequestBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MemcacheRequestBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.MemcacheRequestBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemcacheRequestBase::CopyFrom(const MemcacheRequestBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.MemcacheRequestBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemcacheRequestBase::IsInitialized() const {
  return true;
}

void MemcacheRequestBase::Swap(MemcacheRequestBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemcacheRequestBase::InternalSwap(MemcacheRequestBase* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemcacheRequestBase::GetMetadata() const {
  protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemcacheResponseBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemcacheResponseBase::MemcacheResponseBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fproto_5fbase_2eproto::scc_info_MemcacheResponseBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.MemcacheResponseBase)
}
MemcacheResponseBase::MemcacheResponseBase(const MemcacheResponseBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.MemcacheResponseBase)
}

void MemcacheResponseBase::SharedCtor() {
}

MemcacheResponseBase::~MemcacheResponseBase() {
  // @@protoc_insertion_point(destructor:brpc.MemcacheResponseBase)
  SharedDtor();
}

void MemcacheResponseBase::SharedDtor() {
}

void MemcacheResponseBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemcacheResponseBase::descriptor() {
  ::protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemcacheResponseBase& MemcacheResponseBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fproto_5fbase_2eproto::scc_info_MemcacheResponseBase.base);
  return *internal_default_instance();
}


void MemcacheResponseBase::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.MemcacheResponseBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemcacheResponseBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.MemcacheResponseBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.MemcacheResponseBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.MemcacheResponseBase)
  return false;
#undef DO_
}

void MemcacheResponseBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.MemcacheResponseBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.MemcacheResponseBase)
}

::google::protobuf::uint8* MemcacheResponseBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.MemcacheResponseBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.MemcacheResponseBase)
  return target;
}

size_t MemcacheResponseBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.MemcacheResponseBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemcacheResponseBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.MemcacheResponseBase)
  GOOGLE_DCHECK_NE(&from, this);
  const MemcacheResponseBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemcacheResponseBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.MemcacheResponseBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.MemcacheResponseBase)
    MergeFrom(*source);
  }
}

void MemcacheResponseBase::MergeFrom(const MemcacheResponseBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.MemcacheResponseBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MemcacheResponseBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.MemcacheResponseBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemcacheResponseBase::CopyFrom(const MemcacheResponseBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.MemcacheResponseBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemcacheResponseBase::IsInitialized() const {
  return true;
}

void MemcacheResponseBase::Swap(MemcacheResponseBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemcacheResponseBase::InternalSwap(MemcacheResponseBase* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemcacheResponseBase::GetMetadata() const {
  protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NsheadMessageBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NsheadMessageBase::NsheadMessageBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fproto_5fbase_2eproto::scc_info_NsheadMessageBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.NsheadMessageBase)
}
NsheadMessageBase::NsheadMessageBase(const NsheadMessageBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.NsheadMessageBase)
}

void NsheadMessageBase::SharedCtor() {
}

NsheadMessageBase::~NsheadMessageBase() {
  // @@protoc_insertion_point(destructor:brpc.NsheadMessageBase)
  SharedDtor();
}

void NsheadMessageBase::SharedDtor() {
}

void NsheadMessageBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NsheadMessageBase::descriptor() {
  ::protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NsheadMessageBase& NsheadMessageBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fproto_5fbase_2eproto::scc_info_NsheadMessageBase.base);
  return *internal_default_instance();
}


void NsheadMessageBase::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.NsheadMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NsheadMessageBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.NsheadMessageBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.NsheadMessageBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.NsheadMessageBase)
  return false;
#undef DO_
}

void NsheadMessageBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.NsheadMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.NsheadMessageBase)
}

::google::protobuf::uint8* NsheadMessageBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.NsheadMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.NsheadMessageBase)
  return target;
}

size_t NsheadMessageBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.NsheadMessageBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NsheadMessageBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.NsheadMessageBase)
  GOOGLE_DCHECK_NE(&from, this);
  const NsheadMessageBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NsheadMessageBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.NsheadMessageBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.NsheadMessageBase)
    MergeFrom(*source);
  }
}

void NsheadMessageBase::MergeFrom(const NsheadMessageBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.NsheadMessageBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NsheadMessageBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.NsheadMessageBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NsheadMessageBase::CopyFrom(const NsheadMessageBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.NsheadMessageBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NsheadMessageBase::IsInitialized() const {
  return true;
}

void NsheadMessageBase::Swap(NsheadMessageBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NsheadMessageBase::InternalSwap(NsheadMessageBase* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NsheadMessageBase::GetMetadata() const {
  protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedRequestBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedRequestBase::SerializedRequestBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fproto_5fbase_2eproto::scc_info_SerializedRequestBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.SerializedRequestBase)
}
SerializedRequestBase::SerializedRequestBase(const SerializedRequestBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.SerializedRequestBase)
}

void SerializedRequestBase::SharedCtor() {
}

SerializedRequestBase::~SerializedRequestBase() {
  // @@protoc_insertion_point(destructor:brpc.SerializedRequestBase)
  SharedDtor();
}

void SerializedRequestBase::SharedDtor() {
}

void SerializedRequestBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedRequestBase::descriptor() {
  ::protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedRequestBase& SerializedRequestBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fproto_5fbase_2eproto::scc_info_SerializedRequestBase.base);
  return *internal_default_instance();
}


void SerializedRequestBase::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.SerializedRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SerializedRequestBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.SerializedRequestBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.SerializedRequestBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.SerializedRequestBase)
  return false;
#undef DO_
}

void SerializedRequestBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.SerializedRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.SerializedRequestBase)
}

::google::protobuf::uint8* SerializedRequestBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.SerializedRequestBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.SerializedRequestBase)
  return target;
}

size_t SerializedRequestBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.SerializedRequestBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedRequestBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.SerializedRequestBase)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedRequestBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedRequestBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.SerializedRequestBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.SerializedRequestBase)
    MergeFrom(*source);
  }
}

void SerializedRequestBase::MergeFrom(const SerializedRequestBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.SerializedRequestBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SerializedRequestBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.SerializedRequestBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedRequestBase::CopyFrom(const SerializedRequestBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.SerializedRequestBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedRequestBase::IsInitialized() const {
  return true;
}

void SerializedRequestBase::Swap(SerializedRequestBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedRequestBase::InternalSwap(SerializedRequestBase* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedRequestBase::GetMetadata() const {
  protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThriftFramedMessageBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThriftFramedMessageBase::ThriftFramedMessageBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fproto_5fbase_2eproto::scc_info_ThriftFramedMessageBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ThriftFramedMessageBase)
}
ThriftFramedMessageBase::ThriftFramedMessageBase(const ThriftFramedMessageBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ThriftFramedMessageBase)
}

void ThriftFramedMessageBase::SharedCtor() {
}

ThriftFramedMessageBase::~ThriftFramedMessageBase() {
  // @@protoc_insertion_point(destructor:brpc.ThriftFramedMessageBase)
  SharedDtor();
}

void ThriftFramedMessageBase::SharedDtor() {
}

void ThriftFramedMessageBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ThriftFramedMessageBase::descriptor() {
  ::protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThriftFramedMessageBase& ThriftFramedMessageBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fproto_5fbase_2eproto::scc_info_ThriftFramedMessageBase.base);
  return *internal_default_instance();
}


void ThriftFramedMessageBase::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ThriftFramedMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ThriftFramedMessageBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ThriftFramedMessageBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ThriftFramedMessageBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ThriftFramedMessageBase)
  return false;
#undef DO_
}

void ThriftFramedMessageBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ThriftFramedMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ThriftFramedMessageBase)
}

::google::protobuf::uint8* ThriftFramedMessageBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ThriftFramedMessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ThriftFramedMessageBase)
  return target;
}

size_t ThriftFramedMessageBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ThriftFramedMessageBase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ThriftFramedMessageBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ThriftFramedMessageBase)
  GOOGLE_DCHECK_NE(&from, this);
  const ThriftFramedMessageBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThriftFramedMessageBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ThriftFramedMessageBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ThriftFramedMessageBase)
    MergeFrom(*source);
  }
}

void ThriftFramedMessageBase::MergeFrom(const ThriftFramedMessageBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ThriftFramedMessageBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ThriftFramedMessageBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ThriftFramedMessageBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThriftFramedMessageBase::CopyFrom(const ThriftFramedMessageBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ThriftFramedMessageBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThriftFramedMessageBase::IsInitialized() const {
  return true;
}

void ThriftFramedMessageBase::Swap(ThriftFramedMessageBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThriftFramedMessageBase::InternalSwap(ThriftFramedMessageBase* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ThriftFramedMessageBase::GetMetadata() const {
  protobuf_brpc_2fproto_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fproto_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace brpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RedisRequestBase* Arena::CreateMaybeMessage< ::brpc::RedisRequestBase >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RedisRequestBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RedisResponseBase* Arena::CreateMaybeMessage< ::brpc::RedisResponseBase >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RedisResponseBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::EspMessageBase* Arena::CreateMaybeMessage< ::brpc::EspMessageBase >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::EspMessageBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::MemcacheRequestBase* Arena::CreateMaybeMessage< ::brpc::MemcacheRequestBase >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::MemcacheRequestBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::MemcacheResponseBase* Arena::CreateMaybeMessage< ::brpc::MemcacheResponseBase >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::MemcacheResponseBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::NsheadMessageBase* Arena::CreateMaybeMessage< ::brpc::NsheadMessageBase >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::NsheadMessageBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::SerializedRequestBase* Arena::CreateMaybeMessage< ::brpc::SerializedRequestBase >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::SerializedRequestBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ThriftFramedMessageBase* Arena::CreateMaybeMessage< ::brpc::ThriftFramedMessageBase >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ThriftFramedMessageBase >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/builtin_service.proto

#include "brpc/builtin_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fdescriptor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fdescriptor_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ServiceDescriptorProto;
}  // namespace protobuf_google_2fprotobuf_2fdescriptor_2eproto
namespace brpc {
class IndexRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IndexRequest>
      _instance;
} _IndexRequest_default_instance_;
class IndexResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IndexResponse>
      _instance;
} _IndexResponse_default_instance_;
class FlagsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FlagsRequest>
      _instance;
} _FlagsRequest_default_instance_;
class FlagsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FlagsResponse>
      _instance;
} _FlagsResponse_default_instance_;
class VersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionRequest>
      _instance;
} _VersionRequest_default_instance_;
class VersionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionResponse>
      _instance;
} _VersionResponse_default_instance_;
class HealthRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HealthRequest>
      _instance;
} _HealthRequest_default_instance_;
class HealthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HealthResponse>
      _instance;
} _HealthResponse_default_instance_;
class StatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusRequest>
      _instance;
} _StatusRequest_default_instance_;
class StatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusResponse>
      _instance;
} _StatusResponse_default_instance_;
class ProtobufsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtobufsRequest>
      _instance;
} _ProtobufsRequest_default_instance_;
class ProtobufsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtobufsResponse>
      _instance;
} _ProtobufsResponse_default_instance_;
class ConnectionsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionsRequest>
      _instance;
} _ConnectionsRequest_default_instance_;
class ConnectionsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionsResponse>
      _instance;
} _ConnectionsResponse_default_instance_;
class ListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRequest>
      _instance;
} _ListRequest_default_instance_;
class ListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListResponse>
      _instance;
} _ListResponse_default_instance_;
class VarsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarsRequest>
      _instance;
} _VarsRequest_default_instance_;
class VarsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarsResponse>
      _instance;
} _VarsResponse_default_instance_;
class BthreadsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BthreadsRequest>
      _instance;
} _BthreadsRequest_default_instance_;
class BthreadsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BthreadsResponse>
      _instance;
} _BthreadsResponse_default_instance_;
class IdsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdsRequest>
      _instance;
} _IdsRequest_default_instance_;
class IdsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdsResponse>
      _instance;
} _IdsResponse_default_instance_;
class SocketsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SocketsRequest>
      _instance;
} _SocketsRequest_default_instance_;
class SocketsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SocketsResponse>
      _instance;
} _SocketsResponse_default_instance_;
class RpczRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpczRequest>
      _instance;
} _RpczRequest_default_instance_;
class RpczResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpczResponse>
      _instance;
} _RpczResponse_default_instance_;
class ThreadsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThreadsRequest>
      _instance;
} _ThreadsRequest_default_instance_;
class ThreadsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ThreadsResponse>
      _instance;
} _ThreadsResponse_default_instance_;
class DirRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DirRequest>
      _instance;
} _DirRequest_default_instance_;
class DirResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DirResponse>
      _instance;
} _DirResponse_default_instance_;
class VLogRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VLogRequest>
      _instance;
} _VLogRequest_default_instance_;
class VLogResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VLogResponse>
      _instance;
} _VLogResponse_default_instance_;
class MetricsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetricsRequest>
      _instance;
} _MetricsRequest_default_instance_;
class MetricsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetricsResponse>
      _instance;
} _MetricsResponse_default_instance_;
class BadMethodRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BadMethodRequest>
      _instance;
} _BadMethodRequest_default_instance_;
class BadMethodResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BadMethodResponse>
      _instance;
} _BadMethodResponse_default_instance_;
class ProfileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileRequest>
      _instance;
} _ProfileRequest_default_instance_;
class ProfileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProfileResponse>
      _instance;
} _ProfileResponse_default_instance_;
class HotspotsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotspotsRequest>
      _instance;
} _HotspotsRequest_default_instance_;
class HotspotsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HotspotsResponse>
      _instance;
} _HotspotsResponse_default_instance_;
}  // namespace brpc
namespace protobuf_brpc_2fbuiltin_5fservice_2eproto {
static void InitDefaultsIndexRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_IndexRequest_default_instance_;
    new (ptr) ::brpc::IndexRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::IndexRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IndexRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIndexRequest}, {}};

static void InitDefaultsIndexResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_IndexResponse_default_instance_;
    new (ptr) ::brpc::IndexResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::IndexResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IndexResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIndexResponse}, {}};

static void InitDefaultsFlagsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_FlagsRequest_default_instance_;
    new (ptr) ::brpc::FlagsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::FlagsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FlagsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFlagsRequest}, {}};

static void InitDefaultsFlagsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_FlagsResponse_default_instance_;
    new (ptr) ::brpc::FlagsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::FlagsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FlagsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFlagsResponse}, {}};

static void InitDefaultsVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_VersionRequest_default_instance_;
    new (ptr) ::brpc::VersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::VersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionRequest}, {}};

static void InitDefaultsVersionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_VersionResponse_default_instance_;
    new (ptr) ::brpc::VersionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::VersionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionResponse}, {}};

static void InitDefaultsHealthRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_HealthRequest_default_instance_;
    new (ptr) ::brpc::HealthRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::HealthRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HealthRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHealthRequest}, {}};

static void InitDefaultsHealthResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_HealthResponse_default_instance_;
    new (ptr) ::brpc::HealthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::HealthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HealthResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHealthResponse}, {}};

static void InitDefaultsStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_StatusRequest_default_instance_;
    new (ptr) ::brpc::StatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::StatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatusRequest}, {}};

static void InitDefaultsStatusResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_StatusResponse_default_instance_;
    new (ptr) ::brpc::StatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::StatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StatusResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatusResponse}, {}};

static void InitDefaultsProtobufsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ProtobufsRequest_default_instance_;
    new (ptr) ::brpc::ProtobufsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ProtobufsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtobufsRequest}, {}};

static void InitDefaultsProtobufsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ProtobufsResponse_default_instance_;
    new (ptr) ::brpc::ProtobufsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ProtobufsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtobufsResponse}, {}};

static void InitDefaultsConnectionsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ConnectionsRequest_default_instance_;
    new (ptr) ::brpc::ConnectionsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ConnectionsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionsRequest}, {}};

static void InitDefaultsConnectionsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ConnectionsResponse_default_instance_;
    new (ptr) ::brpc::ConnectionsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ConnectionsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionsResponse}, {}};

static void InitDefaultsListRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ListRequest_default_instance_;
    new (ptr) ::brpc::ListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListRequest}, {}};

static void InitDefaultsListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ListResponse_default_instance_;
    new (ptr) ::brpc::ListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListResponse}, {
      &protobuf_google_2fprotobuf_2fdescriptor_2eproto::scc_info_ServiceDescriptorProto.base,}};

static void InitDefaultsVarsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_VarsRequest_default_instance_;
    new (ptr) ::brpc::VarsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::VarsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VarsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVarsRequest}, {}};

static void InitDefaultsVarsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_VarsResponse_default_instance_;
    new (ptr) ::brpc::VarsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::VarsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VarsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVarsResponse}, {}};

static void InitDefaultsBthreadsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_BthreadsRequest_default_instance_;
    new (ptr) ::brpc::BthreadsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::BthreadsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BthreadsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBthreadsRequest}, {}};

static void InitDefaultsBthreadsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_BthreadsResponse_default_instance_;
    new (ptr) ::brpc::BthreadsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::BthreadsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BthreadsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBthreadsResponse}, {}};

static void InitDefaultsIdsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_IdsRequest_default_instance_;
    new (ptr) ::brpc::IdsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::IdsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IdsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdsRequest}, {}};

static void InitDefaultsIdsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_IdsResponse_default_instance_;
    new (ptr) ::brpc::IdsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::IdsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IdsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdsResponse}, {}};

static void InitDefaultsSocketsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_SocketsRequest_default_instance_;
    new (ptr) ::brpc::SocketsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::SocketsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SocketsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSocketsRequest}, {}};

static void InitDefaultsSocketsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_SocketsResponse_default_instance_;
    new (ptr) ::brpc::SocketsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::SocketsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SocketsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSocketsResponse}, {}};

static void InitDefaultsRpczRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RpczRequest_default_instance_;
    new (ptr) ::brpc::RpczRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RpczRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RpczRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRpczRequest}, {}};

static void InitDefaultsRpczResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RpczResponse_default_instance_;
    new (ptr) ::brpc::RpczResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RpczResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RpczResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRpczResponse}, {}};

static void InitDefaultsThreadsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ThreadsRequest_default_instance_;
    new (ptr) ::brpc::ThreadsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ThreadsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ThreadsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThreadsRequest}, {}};

static void InitDefaultsThreadsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ThreadsResponse_default_instance_;
    new (ptr) ::brpc::ThreadsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ThreadsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ThreadsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThreadsResponse}, {}};

static void InitDefaultsDirRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_DirRequest_default_instance_;
    new (ptr) ::brpc::DirRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::DirRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DirRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDirRequest}, {}};

static void InitDefaultsDirResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_DirResponse_default_instance_;
    new (ptr) ::brpc::DirResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::DirResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DirResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDirResponse}, {}};

static void InitDefaultsVLogRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_VLogRequest_default_instance_;
    new (ptr) ::brpc::VLogRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::VLogRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VLogRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVLogRequest}, {}};

static void InitDefaultsVLogResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_VLogResponse_default_instance_;
    new (ptr) ::brpc::VLogResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::VLogResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VLogResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVLogResponse}, {}};

static void InitDefaultsMetricsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_MetricsRequest_default_instance_;
    new (ptr) ::brpc::MetricsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::MetricsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetricsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetricsRequest}, {}};

static void InitDefaultsMetricsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_MetricsResponse_default_instance_;
    new (ptr) ::brpc::MetricsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::MetricsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetricsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetricsResponse}, {}};

static void InitDefaultsBadMethodRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_BadMethodRequest_default_instance_;
    new (ptr) ::brpc::BadMethodRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::BadMethodRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BadMethodRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBadMethodRequest}, {}};

static void InitDefaultsBadMethodResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_BadMethodResponse_default_instance_;
    new (ptr) ::brpc::BadMethodResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::BadMethodResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BadMethodResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBadMethodResponse}, {}};

static void InitDefaultsProfileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ProfileRequest_default_instance_;
    new (ptr) ::brpc::ProfileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ProfileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProfileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfileRequest}, {}};

static void InitDefaultsProfileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_ProfileResponse_default_instance_;
    new (ptr) ::brpc::ProfileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::ProfileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProfileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfileResponse}, {}};

static void InitDefaultsHotspotsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_HotspotsRequest_default_instance_;
    new (ptr) ::brpc::HotspotsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::HotspotsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HotspotsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHotspotsRequest}, {}};

static void InitDefaultsHotspotsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_HotspotsResponse_default_instance_;
    new (ptr) ::brpc::HotspotsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::HotspotsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HotspotsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHotspotsResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_IndexRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IndexResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FlagsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FlagsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VersionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HealthRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HealthResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtobufsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtobufsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BthreadsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BthreadsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IdsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IdsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SocketsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SocketsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RpczRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RpczResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ThreadsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ThreadsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DirRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DirResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VLogRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VLogResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetricsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetricsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BadMethodRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BadMethodResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProfileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotspotsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HotspotsResponse.base);
}

::google::protobuf::Metadata file_level_metadata[40];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[20];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::IndexRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::IndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::IndexResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::IndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::FlagsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::FlagsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::FlagsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::FlagsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VersionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VersionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::HealthRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::HealthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::HealthResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::HealthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::StatusRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::StatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::StatusResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::StatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ProtobufsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ProtobufsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ProtobufsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ProtobufsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ConnectionsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ConnectionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ConnectionsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ConnectionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ListResponse, service_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VarsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VarsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VarsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VarsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BthreadsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BthreadsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BthreadsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BthreadsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::IdsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::IdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::IdsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::IdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::SocketsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::SocketsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::SocketsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::SocketsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RpczRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RpczRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RpczResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RpczResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ThreadsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ThreadsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ThreadsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ThreadsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::DirRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::DirRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::DirResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::DirResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VLogRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VLogResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::VLogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::MetricsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::MetricsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::MetricsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::MetricsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BadMethodRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BadMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BadMethodRequest, service_name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BadMethodResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::BadMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ProfileRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ProfileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::ProfileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::HotspotsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::HotspotsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::HotspotsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::HotspotsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::brpc::IndexRequest)},
  { 5, 10, sizeof(::brpc::IndexResponse)},
  { 10, 15, sizeof(::brpc::FlagsRequest)},
  { 15, 20, sizeof(::brpc::FlagsResponse)},
  { 20, 25, sizeof(::brpc::VersionRequest)},
  { 25, 30, sizeof(::brpc::VersionResponse)},
  { 30, 35, sizeof(::brpc::HealthRequest)},
  { 35, 40, sizeof(::brpc::HealthResponse)},
  { 40, 45, sizeof(::brpc::StatusRequest)},
  { 45, 50, sizeof(::brpc::StatusResponse)},
  { 50, 55, sizeof(::brpc::ProtobufsRequest)},
  { 55, 60, sizeof(::brpc::ProtobufsResponse)},
  { 60, 65, sizeof(::brpc::ConnectionsRequest)},
  { 65, 70, sizeof(::brpc::ConnectionsResponse)},
  { 70, 75, sizeof(::brpc::ListRequest)},
  { 75, 81, sizeof(::brpc::ListResponse)},
  { 82, 87, sizeof(::brpc::VarsRequest)},
  { 87, 92, sizeof(::brpc::VarsResponse)},
  { 92, 97, sizeof(::brpc::BthreadsRequest)},
  { 97, 102, sizeof(::brpc::BthreadsResponse)},
  { 102, 107, sizeof(::brpc::IdsRequest)},
  { 107, 112, sizeof(::brpc::IdsResponse)},
  { 112, 117, sizeof(::brpc::SocketsRequest)},
  { 117, 122, sizeof(::brpc::SocketsResponse)},
  { 122, 127, sizeof(::brpc::RpczRequest)},
  { 127, 132, sizeof(::brpc::RpczResponse)},
  { 132, 137, sizeof(::brpc::ThreadsRequest)},
  { 137, 142, sizeof(::brpc::ThreadsResponse)},
  { 142, 147, sizeof(::brpc::DirRequest)},
  { 147, 152, sizeof(::brpc::DirResponse)},
  { 152, 157, sizeof(::brpc::VLogRequest)},
  { 157, 162, sizeof(::brpc::VLogResponse)},
  { 162, 167, sizeof(::brpc::MetricsRequest)},
  { 167, 172, sizeof(::brpc::MetricsResponse)},
  { 172, 178, sizeof(::brpc::BadMethodRequest)},
  { 179, 184, sizeof(::brpc::BadMethodResponse)},
  { 184, 189, sizeof(::brpc::ProfileRequest)},
  { 189, 194, sizeof(::brpc::ProfileResponse)},
  { 194, 199, sizeof(::brpc::HotspotsRequest)},
  { 199, 204, sizeof(::brpc::HotspotsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_IndexRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_IndexResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_FlagsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_FlagsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_VersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_VersionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_HealthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_HealthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_StatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_StatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ProtobufsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ProtobufsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ConnectionsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ConnectionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_VarsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_VarsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_BthreadsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_BthreadsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_IdsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_IdsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_SocketsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_SocketsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RpczRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RpczResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ThreadsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ThreadsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_DirRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_DirResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_VLogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_VLogResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_MetricsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_MetricsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_BadMethodRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_BadMethodResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ProfileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_ProfileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_HotspotsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_HotspotsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "brpc/builtin_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 40);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032brpc/builtin_service.proto\022\004brpc\032 goog"
      "le/protobuf/descriptor.proto\"\016\n\014IndexReq"
      "uest\"\017\n\rIndexResponse\"\016\n\014FlagsRequest\"\017\n"
      "\rFlagsResponse\"\020\n\016VersionRequest\"\021\n\017Vers"
      "ionResponse\"\017\n\rHealthRequest\"\020\n\016HealthRe"
      "sponse\"\017\n\rStatusRequest\"\020\n\016StatusRespons"
      "e\"\022\n\020ProtobufsRequest\"\023\n\021ProtobufsRespon"
      "se\"\024\n\022ConnectionsRequest\"\025\n\023ConnectionsR"
      "esponse\"\r\n\013ListRequest\"H\n\014ListResponse\0228"
      "\n\007service\030\001 \003(\0132\'.google.protobuf.Servic"
      "eDescriptorProto\"\r\n\013VarsRequest\"\016\n\014VarsR"
      "esponse\"\021\n\017BthreadsRequest\"\022\n\020BthreadsRe"
      "sponse\"\014\n\nIdsRequest\"\r\n\013IdsResponse\"\020\n\016S"
      "ocketsRequest\"\021\n\017SocketsResponse\"\r\n\013Rpcz"
      "Request\"\016\n\014RpczResponse\"\020\n\016ThreadsReques"
      "t\"\021\n\017ThreadsResponse\"\014\n\nDirRequest\"\r\n\013Di"
      "rResponse\"\r\n\013VLogRequest\"\016\n\014VLogResponse"
      "\"\020\n\016MetricsRequest\"\021\n\017MetricsResponse\"(\n"
      "\020BadMethodRequest\022\024\n\014service_name\030\001 \002(\t\""
      "\023\n\021BadMethodResponse\"\020\n\016ProfileRequest\"\021"
      "\n\017ProfileResponse\"\021\n\017HotspotsRequest\"\022\n\020"
      "HotspotsResponse2B\n\005index\0229\n\016default_met"
      "hod\022\022.brpc.IndexRequest\032\023.brpc.IndexResp"
      "onse2H\n\007version\022=\n\016default_method\022\024.brpc"
      ".VersionRequest\032\025.brpc.VersionResponse2E"
      "\n\006health\022;\n\016default_method\022\023.brpc.Health"
      "Request\032\024.brpc.HealthResponse2E\n\006status\022"
      ";\n\016default_method\022\023.brpc.StatusRequest\032\024"
      ".brpc.StatusResponse2N\n\tprotobufs\022A\n\016def"
      "ault_method\022\026.brpc.ProtobufsRequest\032\027.br"
      "pc.ProtobufsResponse2T\n\013connections\022E\n\016d"
      "efault_method\022\030.brpc.ConnectionsRequest\032"
      "\031.brpc.ConnectionsResponse2\?\n\004list\0227\n\016de"
      "fault_method\022\021.brpc.ListRequest\032\022.brpc.L"
      "istResponse2H\n\007threads\022=\n\016default_method"
      "\022\024.brpc.ThreadsRequest\032\025.brpc.ThreadsRes"
      "ponse2\?\n\004vlog\0227\n\016default_method\022\021.brpc.V"
      "LogRequest\032\022.brpc.VLogResponse2K\n\010bthrea"
      "ds\022\?\n\016default_method\022\025.brpc.BthreadsRequ"
      "est\032\026.brpc.BthreadsResponse2<\n\003ids\0225\n\016de"
      "fault_method\022\020.brpc.IdsRequest\032\021.brpc.Id"
      "sResponse2H\n\007sockets\022=\n\016default_method\022\024"
      ".brpc.SocketsRequest\032\025.brpc.SocketsRespo"
      "nse2M\n\014brpc_metrics\022=\n\016default_method\022\024."
      "brpc.MetricsRequest\032\025.brpc.MetricsRespon"
      "se2I\n\tbadmethod\022<\n\tno_method\022\026.brpc.BadM"
      "ethodRequest\032\027.brpc.BadMethodResponse2\325\002"
      "\n\005pprof\0226\n\007profile\022\024.brpc.ProfileRequest"
      "\032\025.brpc.ProfileResponse\0229\n\ncontention\022\024."
      "brpc.ProfileRequest\032\025.brpc.ProfileRespon"
      "se\0223\n\004heap\022\024.brpc.ProfileRequest\032\025.brpc."
      "ProfileResponse\0225\n\006symbol\022\024.brpc.Profile"
      "Request\032\025.brpc.ProfileResponse\0226\n\007cmdlin"
      "e\022\024.brpc.ProfileRequest\032\025.brpc.ProfileRe"
      "sponse\0225\n\006growth\022\024.brpc.ProfileRequest\032\025"
      ".brpc.ProfileResponse2\214\004\n\010hotspots\0224\n\003cp"
      "u\022\025.brpc.HotspotsRequest\032\026.brpc.Hotspots"
      "Response\022C\n\022cpu_non_responsive\022\025.brpc.Ho"
      "tspotsRequest\032\026.brpc.HotspotsResponse\0225\n"
      "\004heap\022\025.brpc.HotspotsRequest\032\026.brpc.Hots"
      "potsResponse\022D\n\023heap_non_responsive\022\025.br"
      "pc.HotspotsRequest\032\026.brpc.HotspotsRespon"
      "se\0227\n\006growth\022\025.brpc.HotspotsRequest\032\026.br"
      "pc.HotspotsResponse\022F\n\025growth_non_respon"
      "sive\022\025.brpc.HotspotsRequest\032\026.brpc.Hotsp"
      "otsResponse\022;\n\ncontention\022\025.brpc.Hotspot"
      "sRequest\032\026.brpc.HotspotsResponse\022J\n\031cont"
      "ention_non_responsive\022\025.brpc.HotspotsReq"
      "uest\032\026.brpc.HotspotsResponse2B\n\005flags\0229\n"
      "\016default_method\022\022.brpc.FlagsRequest\032\023.br"
      "pc.FlagsResponse2\?\n\004vars\0227\n\016default_meth"
      "od\022\021.brpc.VarsRequest\032\022.brpc.VarsRespons"
      "e2\274\002\n\004rpcz\022/\n\006enable\022\021.brpc.RpczRequest\032"
      "\022.brpc.RpczResponse\0220\n\007disable\022\021.brpc.Rp"
      "czRequest\032\022.brpc.RpczResponse\022.\n\005stats\022\021"
      ".brpc.RpczRequest\032\022.brpc.RpczResponse\0223\n"
      "\nhex_log_id\022\021.brpc.RpczRequest\032\022.brpc.Rp"
      "czResponse\0223\n\ndec_log_id\022\021.brpc.RpczRequ"
      "est\032\022.brpc.RpczResponse\0227\n\016default_metho"
      "d\022\021.brpc.RpczRequest\032\022.brpc.RpczResponse"
      "2<\n\003dir\0225\n\016default_method\022\020.brpc.DirRequ"
      "est\032\021.brpc.DirResponseB \n\010com.brpcB\016Buil"
      "tinService\200\001\001\210\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3296);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "brpc/builtin_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_brpc_2fbuiltin_5fservice_2eproto
namespace brpc {

// ===================================================================

void IndexRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexRequest::IndexRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_IndexRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.IndexRequest)
}
IndexRequest::IndexRequest(const IndexRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.IndexRequest)
}

void IndexRequest::SharedCtor() {
}

IndexRequest::~IndexRequest() {
  // @@protoc_insertion_point(destructor:brpc.IndexRequest)
  SharedDtor();
}

void IndexRequest::SharedDtor() {
}

void IndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IndexRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexRequest& IndexRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_IndexRequest.base);
  return *internal_default_instance();
}


void IndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.IndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IndexRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.IndexRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.IndexRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.IndexRequest)
  return false;
#undef DO_
}

void IndexRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.IndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.IndexRequest)
}

::google::protobuf::uint8* IndexRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.IndexRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.IndexRequest)
  return target;
}

size_t IndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.IndexRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.IndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.IndexRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.IndexRequest)
    MergeFrom(*source);
  }
}

void IndexRequest::MergeFrom(const IndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.IndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IndexRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.IndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexRequest::CopyFrom(const IndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.IndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexRequest::IsInitialized() const {
  return true;
}

void IndexRequest::Swap(IndexRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexRequest::InternalSwap(IndexRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IndexRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IndexResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IndexResponse::IndexResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_IndexResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.IndexResponse)
}
IndexResponse::IndexResponse(const IndexResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.IndexResponse)
}

void IndexResponse::SharedCtor() {
}

IndexResponse::~IndexResponse() {
  // @@protoc_insertion_point(destructor:brpc.IndexResponse)
  SharedDtor();
}

void IndexResponse::SharedDtor() {
}

void IndexResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IndexResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IndexResponse& IndexResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_IndexResponse.base);
  return *internal_default_instance();
}


void IndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.IndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IndexResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.IndexResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.IndexResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.IndexResponse)
  return false;
#undef DO_
}

void IndexResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.IndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.IndexResponse)
}

::google::protobuf::uint8* IndexResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.IndexResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.IndexResponse)
  return target;
}

size_t IndexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.IndexResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.IndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IndexResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.IndexResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.IndexResponse)
    MergeFrom(*source);
  }
}

void IndexResponse::MergeFrom(const IndexResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.IndexResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IndexResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.IndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexResponse::CopyFrom(const IndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.IndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexResponse::IsInitialized() const {
  return true;
}

void IndexResponse::Swap(IndexResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IndexResponse::InternalSwap(IndexResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IndexResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FlagsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlagsRequest::FlagsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_FlagsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.FlagsRequest)
}
FlagsRequest::FlagsRequest(const FlagsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.FlagsRequest)
}

void FlagsRequest::SharedCtor() {
}

FlagsRequest::~FlagsRequest() {
  // @@protoc_insertion_point(destructor:brpc.FlagsRequest)
  SharedDtor();
}

void FlagsRequest::SharedDtor() {
}

void FlagsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FlagsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlagsRequest& FlagsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_FlagsRequest.base);
  return *internal_default_instance();
}


void FlagsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.FlagsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FlagsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.FlagsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.FlagsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.FlagsRequest)
  return false;
#undef DO_
}

void FlagsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.FlagsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.FlagsRequest)
}

::google::protobuf::uint8* FlagsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.FlagsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.FlagsRequest)
  return target;
}

size_t FlagsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.FlagsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlagsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.FlagsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FlagsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlagsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.FlagsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.FlagsRequest)
    MergeFrom(*source);
  }
}

void FlagsRequest::MergeFrom(const FlagsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.FlagsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FlagsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.FlagsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlagsRequest::CopyFrom(const FlagsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.FlagsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlagsRequest::IsInitialized() const {
  return true;
}

void FlagsRequest::Swap(FlagsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlagsRequest::InternalSwap(FlagsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlagsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FlagsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlagsResponse::FlagsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_FlagsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.FlagsResponse)
}
FlagsResponse::FlagsResponse(const FlagsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.FlagsResponse)
}

void FlagsResponse::SharedCtor() {
}

FlagsResponse::~FlagsResponse() {
  // @@protoc_insertion_point(destructor:brpc.FlagsResponse)
  SharedDtor();
}

void FlagsResponse::SharedDtor() {
}

void FlagsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FlagsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlagsResponse& FlagsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_FlagsResponse.base);
  return *internal_default_instance();
}


void FlagsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.FlagsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FlagsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.FlagsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.FlagsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.FlagsResponse)
  return false;
#undef DO_
}

void FlagsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.FlagsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.FlagsResponse)
}

::google::protobuf::uint8* FlagsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.FlagsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.FlagsResponse)
  return target;
}

size_t FlagsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.FlagsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlagsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.FlagsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FlagsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlagsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.FlagsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.FlagsResponse)
    MergeFrom(*source);
  }
}

void FlagsResponse::MergeFrom(const FlagsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.FlagsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FlagsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.FlagsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlagsResponse::CopyFrom(const FlagsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.FlagsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlagsResponse::IsInitialized() const {
  return true;
}

void FlagsResponse::Swap(FlagsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlagsResponse::InternalSwap(FlagsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlagsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionRequest::VersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.VersionRequest)
}
VersionRequest::VersionRequest(const VersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VersionRequest)
}

void VersionRequest::SharedCtor() {
}

VersionRequest::~VersionRequest() {
  // @@protoc_insertion_point(destructor:brpc.VersionRequest)
  SharedDtor();
}

void VersionRequest::SharedDtor() {
}

void VersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionRequest& VersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VersionRequest.base);
  return *internal_default_instance();
}


void VersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.VersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.VersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.VersionRequest)
  return false;
#undef DO_
}

void VersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.VersionRequest)
}

::google::protobuf::uint8* VersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.VersionRequest)
  return target;
}

size_t VersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.VersionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.VersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.VersionRequest)
    MergeFrom(*source);
  }
}

void VersionRequest::MergeFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionRequest::CopyFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionRequest::IsInitialized() const {
  return true;
}

void VersionRequest::Swap(VersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionRequest::InternalSwap(VersionRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VersionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionResponse::VersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VersionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.VersionResponse)
}
VersionResponse::VersionResponse(const VersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VersionResponse)
}

void VersionResponse::SharedCtor() {
}

VersionResponse::~VersionResponse() {
  // @@protoc_insertion_point(destructor:brpc.VersionResponse)
  SharedDtor();
}

void VersionResponse::SharedDtor() {
}

void VersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionResponse& VersionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VersionResponse.base);
  return *internal_default_instance();
}


void VersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.VersionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.VersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.VersionResponse)
  return false;
#undef DO_
}

void VersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.VersionResponse)
}

::google::protobuf::uint8* VersionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.VersionResponse)
  return target;
}

size_t VersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.VersionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.VersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.VersionResponse)
    MergeFrom(*source);
  }
}

void VersionResponse::MergeFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionResponse::CopyFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionResponse::IsInitialized() const {
  return true;
}

void VersionResponse::Swap(VersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionResponse::InternalSwap(VersionResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HealthRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HealthRequest::HealthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_HealthRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.HealthRequest)
}
HealthRequest::HealthRequest(const HealthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.HealthRequest)
}

void HealthRequest::SharedCtor() {
}

HealthRequest::~HealthRequest() {
  // @@protoc_insertion_point(destructor:brpc.HealthRequest)
  SharedDtor();
}

void HealthRequest::SharedDtor() {
}

void HealthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HealthRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HealthRequest& HealthRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_HealthRequest.base);
  return *internal_default_instance();
}


void HealthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.HealthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HealthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.HealthRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.HealthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.HealthRequest)
  return false;
#undef DO_
}

void HealthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.HealthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.HealthRequest)
}

::google::protobuf::uint8* HealthRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.HealthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.HealthRequest)
  return target;
}

size_t HealthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.HealthRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.HealthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HealthRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.HealthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.HealthRequest)
    MergeFrom(*source);
  }
}

void HealthRequest::MergeFrom(const HealthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.HealthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HealthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.HealthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthRequest::CopyFrom(const HealthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.HealthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthRequest::IsInitialized() const {
  return true;
}

void HealthRequest::Swap(HealthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HealthRequest::InternalSwap(HealthRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HealthRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HealthResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HealthResponse::HealthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_HealthResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.HealthResponse)
}
HealthResponse::HealthResponse(const HealthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.HealthResponse)
}

void HealthResponse::SharedCtor() {
}

HealthResponse::~HealthResponse() {
  // @@protoc_insertion_point(destructor:brpc.HealthResponse)
  SharedDtor();
}

void HealthResponse::SharedDtor() {
}

void HealthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HealthResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HealthResponse& HealthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_HealthResponse.base);
  return *internal_default_instance();
}


void HealthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.HealthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HealthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.HealthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.HealthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.HealthResponse)
  return false;
#undef DO_
}

void HealthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.HealthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.HealthResponse)
}

::google::protobuf::uint8* HealthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.HealthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.HealthResponse)
  return target;
}

size_t HealthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.HealthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.HealthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HealthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.HealthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.HealthResponse)
    MergeFrom(*source);
  }
}

void HealthResponse::MergeFrom(const HealthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.HealthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HealthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.HealthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthResponse::CopyFrom(const HealthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.HealthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthResponse::IsInitialized() const {
  return true;
}

void HealthResponse::Swap(HealthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HealthResponse::InternalSwap(HealthResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HealthResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusRequest::StatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_StatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.StatusRequest)
}
StatusRequest::StatusRequest(const StatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.StatusRequest)
}

void StatusRequest::SharedCtor() {
}

StatusRequest::~StatusRequest() {
  // @@protoc_insertion_point(destructor:brpc.StatusRequest)
  SharedDtor();
}

void StatusRequest::SharedDtor() {
}

void StatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StatusRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusRequest& StatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_StatusRequest.base);
  return *internal_default_instance();
}


void StatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.StatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.StatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.StatusRequest)
  return false;
#undef DO_
}

void StatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.StatusRequest)
}

::google::protobuf::uint8* StatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.StatusRequest)
  return target;
}

size_t StatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.StatusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.StatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.StatusRequest)
    MergeFrom(*source);
  }
}

void StatusRequest::MergeFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusRequest::CopyFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusRequest::IsInitialized() const {
  return true;
}

void StatusRequest::Swap(StatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusRequest::InternalSwap(StatusRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StatusRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusResponse::StatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_StatusResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.StatusResponse)
}
StatusResponse::StatusResponse(const StatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.StatusResponse)
}

void StatusResponse::SharedCtor() {
}

StatusResponse::~StatusResponse() {
  // @@protoc_insertion_point(destructor:brpc.StatusResponse)
  SharedDtor();
}

void StatusResponse::SharedDtor() {
}

void StatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StatusResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusResponse& StatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_StatusResponse.base);
  return *internal_default_instance();
}


void StatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.StatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.StatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.StatusResponse)
  return false;
#undef DO_
}

void StatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.StatusResponse)
}

::google::protobuf::uint8* StatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.StatusResponse)
  return target;
}

size_t StatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.StatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.StatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.StatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.StatusResponse)
    MergeFrom(*source);
  }
}

void StatusResponse::MergeFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.StatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusResponse::CopyFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusResponse::IsInitialized() const {
  return true;
}

void StatusResponse::Swap(StatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusResponse::InternalSwap(StatusResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StatusResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtobufsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufsRequest::ProtobufsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ProtobufsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ProtobufsRequest)
}
ProtobufsRequest::ProtobufsRequest(const ProtobufsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ProtobufsRequest)
}

void ProtobufsRequest::SharedCtor() {
}

ProtobufsRequest::~ProtobufsRequest() {
  // @@protoc_insertion_point(destructor:brpc.ProtobufsRequest)
  SharedDtor();
}

void ProtobufsRequest::SharedDtor() {
}

void ProtobufsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtobufsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtobufsRequest& ProtobufsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ProtobufsRequest.base);
  return *internal_default_instance();
}


void ProtobufsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ProtobufsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtobufsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ProtobufsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ProtobufsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ProtobufsRequest)
  return false;
#undef DO_
}

void ProtobufsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ProtobufsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ProtobufsRequest)
}

::google::protobuf::uint8* ProtobufsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ProtobufsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ProtobufsRequest)
  return target;
}

size_t ProtobufsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ProtobufsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ProtobufsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ProtobufsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ProtobufsRequest)
    MergeFrom(*source);
  }
}

void ProtobufsRequest::MergeFrom(const ProtobufsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ProtobufsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProtobufsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ProtobufsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufsRequest::CopyFrom(const ProtobufsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ProtobufsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufsRequest::IsInitialized() const {
  return true;
}

void ProtobufsRequest::Swap(ProtobufsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufsRequest::InternalSwap(ProtobufsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtobufsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtobufsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufsResponse::ProtobufsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ProtobufsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ProtobufsResponse)
}
ProtobufsResponse::ProtobufsResponse(const ProtobufsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ProtobufsResponse)
}

void ProtobufsResponse::SharedCtor() {
}

ProtobufsResponse::~ProtobufsResponse() {
  // @@protoc_insertion_point(destructor:brpc.ProtobufsResponse)
  SharedDtor();
}

void ProtobufsResponse::SharedDtor() {
}

void ProtobufsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtobufsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtobufsResponse& ProtobufsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ProtobufsResponse.base);
  return *internal_default_instance();
}


void ProtobufsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ProtobufsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtobufsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ProtobufsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ProtobufsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ProtobufsResponse)
  return false;
#undef DO_
}

void ProtobufsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ProtobufsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ProtobufsResponse)
}

::google::protobuf::uint8* ProtobufsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ProtobufsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ProtobufsResponse)
  return target;
}

size_t ProtobufsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ProtobufsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ProtobufsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ProtobufsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ProtobufsResponse)
    MergeFrom(*source);
  }
}

void ProtobufsResponse::MergeFrom(const ProtobufsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ProtobufsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProtobufsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ProtobufsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufsResponse::CopyFrom(const ProtobufsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ProtobufsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufsResponse::IsInitialized() const {
  return true;
}

void ProtobufsResponse::Swap(ProtobufsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufsResponse::InternalSwap(ProtobufsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtobufsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectionsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionsRequest::ConnectionsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ConnectionsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ConnectionsRequest)
}
ConnectionsRequest::ConnectionsRequest(const ConnectionsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ConnectionsRequest)
}

void ConnectionsRequest::SharedCtor() {
}

ConnectionsRequest::~ConnectionsRequest() {
  // @@protoc_insertion_point(destructor:brpc.ConnectionsRequest)
  SharedDtor();
}

void ConnectionsRequest::SharedDtor() {
}

void ConnectionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionsRequest& ConnectionsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ConnectionsRequest.base);
  return *internal_default_instance();
}


void ConnectionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ConnectionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectionsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ConnectionsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ConnectionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ConnectionsRequest)
  return false;
#undef DO_
}

void ConnectionsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ConnectionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ConnectionsRequest)
}

::google::protobuf::uint8* ConnectionsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ConnectionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ConnectionsRequest)
  return target;
}

size_t ConnectionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ConnectionsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ConnectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ConnectionsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ConnectionsRequest)
    MergeFrom(*source);
  }
}

void ConnectionsRequest::MergeFrom(const ConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ConnectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConnectionsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ConnectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionsRequest::CopyFrom(const ConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ConnectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionsRequest::IsInitialized() const {
  return true;
}

void ConnectionsRequest::Swap(ConnectionsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionsRequest::InternalSwap(ConnectionsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectionsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionsResponse::ConnectionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ConnectionsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ConnectionsResponse)
}
ConnectionsResponse::ConnectionsResponse(const ConnectionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ConnectionsResponse)
}

void ConnectionsResponse::SharedCtor() {
}

ConnectionsResponse::~ConnectionsResponse() {
  // @@protoc_insertion_point(destructor:brpc.ConnectionsResponse)
  SharedDtor();
}

void ConnectionsResponse::SharedDtor() {
}

void ConnectionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionsResponse& ConnectionsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ConnectionsResponse.base);
  return *internal_default_instance();
}


void ConnectionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ConnectionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ConnectionsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ConnectionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ConnectionsResponse)
  return false;
#undef DO_
}

void ConnectionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ConnectionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ConnectionsResponse)
}

::google::protobuf::uint8* ConnectionsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ConnectionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ConnectionsResponse)
  return target;
}

size_t ConnectionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ConnectionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ConnectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ConnectionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ConnectionsResponse)
    MergeFrom(*source);
  }
}

void ConnectionsResponse::MergeFrom(const ConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ConnectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConnectionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ConnectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionsResponse::CopyFrom(const ConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ConnectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionsResponse::IsInitialized() const {
  return true;
}

void ConnectionsResponse::Swap(ConnectionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionsResponse::InternalSwap(ConnectionsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRequest::ListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ListRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ListRequest)
}
ListRequest::ListRequest(const ListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ListRequest)
}

void ListRequest::SharedCtor() {
}

ListRequest::~ListRequest() {
  // @@protoc_insertion_point(destructor:brpc.ListRequest)
  SharedDtor();
}

void ListRequest::SharedDtor() {
}

void ListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRequest& ListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ListRequest.base);
  return *internal_default_instance();
}


void ListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ListRequest)
  return false;
#undef DO_
}

void ListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ListRequest)
}

::google::protobuf::uint8* ListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ListRequest)
  return target;
}

size_t ListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ListRequest)
    MergeFrom(*source);
  }
}

void ListRequest::MergeFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRequest::CopyFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRequest::IsInitialized() const {
  return true;
}

void ListRequest::Swap(ListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRequest::InternalSwap(ListRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListResponse::InitAsDefaultInstance() {
}
void ListResponse::clear_service() {
  service_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListResponse::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListResponse::ListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ListResponse)
}
ListResponse::ListResponse(const ListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      service_(from.service_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ListResponse)
}

void ListResponse::SharedCtor() {
}

ListResponse::~ListResponse() {
  // @@protoc_insertion_point(destructor:brpc.ListResponse)
  SharedDtor();
}

void ListResponse::SharedDtor() {
}

void ListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListResponse& ListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ListResponse.base);
  return *internal_default_instance();
}


void ListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.ServiceDescriptorProto service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ListResponse)
  return false;
#undef DO_
}

void ListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.ServiceDescriptorProto service = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->service_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->service(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ListResponse)
}

::google::protobuf::uint8* ListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.ServiceDescriptorProto service = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->service_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->service(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ListResponse)
  return target;
}

size_t ListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .google.protobuf.ServiceDescriptorProto service = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->service_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->service(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ListResponse)
    MergeFrom(*source);
  }
}

void ListResponse::MergeFrom(const ListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_.MergeFrom(from.service_);
}

void ListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListResponse::CopyFrom(const ListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->service())) return false;
  return true;
}

void ListResponse::Swap(ListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListResponse::InternalSwap(ListResponse* other) {
  using std::swap;
  CastToBase(&service_)->InternalSwap(CastToBase(&other->service_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarsRequest::VarsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VarsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.VarsRequest)
}
VarsRequest::VarsRequest(const VarsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VarsRequest)
}

void VarsRequest::SharedCtor() {
}

VarsRequest::~VarsRequest() {
  // @@protoc_insertion_point(destructor:brpc.VarsRequest)
  SharedDtor();
}

void VarsRequest::SharedDtor() {
}

void VarsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarsRequest& VarsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VarsRequest.base);
  return *internal_default_instance();
}


void VarsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.VarsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.VarsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.VarsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.VarsRequest)
  return false;
#undef DO_
}

void VarsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.VarsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.VarsRequest)
}

::google::protobuf::uint8* VarsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.VarsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.VarsRequest)
  return target;
}

size_t VarsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.VarsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.VarsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VarsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.VarsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.VarsRequest)
    MergeFrom(*source);
  }
}

void VarsRequest::MergeFrom(const VarsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.VarsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VarsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.VarsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarsRequest::CopyFrom(const VarsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.VarsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarsRequest::IsInitialized() const {
  return true;
}

void VarsRequest::Swap(VarsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarsRequest::InternalSwap(VarsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarsResponse::VarsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VarsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.VarsResponse)
}
VarsResponse::VarsResponse(const VarsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VarsResponse)
}

void VarsResponse::SharedCtor() {
}

VarsResponse::~VarsResponse() {
  // @@protoc_insertion_point(destructor:brpc.VarsResponse)
  SharedDtor();
}

void VarsResponse::SharedDtor() {
}

void VarsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarsResponse& VarsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VarsResponse.base);
  return *internal_default_instance();
}


void VarsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.VarsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.VarsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.VarsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.VarsResponse)
  return false;
#undef DO_
}

void VarsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.VarsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.VarsResponse)
}

::google::protobuf::uint8* VarsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.VarsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.VarsResponse)
  return target;
}

size_t VarsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.VarsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.VarsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VarsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.VarsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.VarsResponse)
    MergeFrom(*source);
  }
}

void VarsResponse::MergeFrom(const VarsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.VarsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VarsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.VarsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarsResponse::CopyFrom(const VarsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.VarsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarsResponse::IsInitialized() const {
  return true;
}

void VarsResponse::Swap(VarsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarsResponse::InternalSwap(VarsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BthreadsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BthreadsRequest::BthreadsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_BthreadsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.BthreadsRequest)
}
BthreadsRequest::BthreadsRequest(const BthreadsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.BthreadsRequest)
}

void BthreadsRequest::SharedCtor() {
}

BthreadsRequest::~BthreadsRequest() {
  // @@protoc_insertion_point(destructor:brpc.BthreadsRequest)
  SharedDtor();
}

void BthreadsRequest::SharedDtor() {
}

void BthreadsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BthreadsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BthreadsRequest& BthreadsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_BthreadsRequest.base);
  return *internal_default_instance();
}


void BthreadsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.BthreadsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BthreadsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.BthreadsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.BthreadsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.BthreadsRequest)
  return false;
#undef DO_
}

void BthreadsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.BthreadsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.BthreadsRequest)
}

::google::protobuf::uint8* BthreadsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.BthreadsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.BthreadsRequest)
  return target;
}

size_t BthreadsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.BthreadsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BthreadsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.BthreadsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BthreadsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BthreadsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.BthreadsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.BthreadsRequest)
    MergeFrom(*source);
  }
}

void BthreadsRequest::MergeFrom(const BthreadsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.BthreadsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BthreadsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.BthreadsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BthreadsRequest::CopyFrom(const BthreadsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.BthreadsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BthreadsRequest::IsInitialized() const {
  return true;
}

void BthreadsRequest::Swap(BthreadsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BthreadsRequest::InternalSwap(BthreadsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BthreadsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BthreadsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BthreadsResponse::BthreadsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_BthreadsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.BthreadsResponse)
}
BthreadsResponse::BthreadsResponse(const BthreadsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.BthreadsResponse)
}

void BthreadsResponse::SharedCtor() {
}

BthreadsResponse::~BthreadsResponse() {
  // @@protoc_insertion_point(destructor:brpc.BthreadsResponse)
  SharedDtor();
}

void BthreadsResponse::SharedDtor() {
}

void BthreadsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BthreadsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BthreadsResponse& BthreadsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_BthreadsResponse.base);
  return *internal_default_instance();
}


void BthreadsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.BthreadsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BthreadsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.BthreadsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.BthreadsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.BthreadsResponse)
  return false;
#undef DO_
}

void BthreadsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.BthreadsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.BthreadsResponse)
}

::google::protobuf::uint8* BthreadsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.BthreadsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.BthreadsResponse)
  return target;
}

size_t BthreadsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.BthreadsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BthreadsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.BthreadsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BthreadsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BthreadsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.BthreadsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.BthreadsResponse)
    MergeFrom(*source);
  }
}

void BthreadsResponse::MergeFrom(const BthreadsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.BthreadsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BthreadsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.BthreadsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BthreadsResponse::CopyFrom(const BthreadsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.BthreadsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BthreadsResponse::IsInitialized() const {
  return true;
}

void BthreadsResponse::Swap(BthreadsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BthreadsResponse::InternalSwap(BthreadsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BthreadsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IdsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdsRequest::IdsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_IdsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.IdsRequest)
}
IdsRequest::IdsRequest(const IdsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.IdsRequest)
}

void IdsRequest::SharedCtor() {
}

IdsRequest::~IdsRequest() {
  // @@protoc_insertion_point(destructor:brpc.IdsRequest)
  SharedDtor();
}

void IdsRequest::SharedDtor() {
}

void IdsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IdsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdsRequest& IdsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_IdsRequest.base);
  return *internal_default_instance();
}


void IdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.IdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IdsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.IdsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.IdsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.IdsRequest)
  return false;
#undef DO_
}

void IdsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.IdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.IdsRequest)
}

::google::protobuf::uint8* IdsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.IdsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.IdsRequest)
  return target;
}

size_t IdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.IdsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.IdsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IdsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.IdsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.IdsRequest)
    MergeFrom(*source);
  }
}

void IdsRequest::MergeFrom(const IdsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.IdsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IdsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.IdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdsRequest::CopyFrom(const IdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.IdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdsRequest::IsInitialized() const {
  return true;
}

void IdsRequest::Swap(IdsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdsRequest::InternalSwap(IdsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IdsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IdsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdsResponse::IdsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_IdsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.IdsResponse)
}
IdsResponse::IdsResponse(const IdsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.IdsResponse)
}

void IdsResponse::SharedCtor() {
}

IdsResponse::~IdsResponse() {
  // @@protoc_insertion_point(destructor:brpc.IdsResponse)
  SharedDtor();
}

void IdsResponse::SharedDtor() {
}

void IdsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IdsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdsResponse& IdsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_IdsResponse.base);
  return *internal_default_instance();
}


void IdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.IdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IdsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.IdsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.IdsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.IdsResponse)
  return false;
#undef DO_
}

void IdsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.IdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.IdsResponse)
}

::google::protobuf::uint8* IdsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.IdsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.IdsResponse)
  return target;
}

size_t IdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.IdsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.IdsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IdsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.IdsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.IdsResponse)
    MergeFrom(*source);
  }
}

void IdsResponse::MergeFrom(const IdsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.IdsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IdsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.IdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdsResponse::CopyFrom(const IdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.IdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdsResponse::IsInitialized() const {
  return true;
}

void IdsResponse::Swap(IdsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdsResponse::InternalSwap(IdsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IdsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SocketsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocketsRequest::SocketsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_SocketsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.SocketsRequest)
}
SocketsRequest::SocketsRequest(const SocketsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.SocketsRequest)
}

void SocketsRequest::SharedCtor() {
}

SocketsRequest::~SocketsRequest() {
  // @@protoc_insertion_point(destructor:brpc.SocketsRequest)
  SharedDtor();
}

void SocketsRequest::SharedDtor() {
}

void SocketsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SocketsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SocketsRequest& SocketsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_SocketsRequest.base);
  return *internal_default_instance();
}


void SocketsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.SocketsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SocketsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.SocketsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.SocketsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.SocketsRequest)
  return false;
#undef DO_
}

void SocketsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.SocketsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.SocketsRequest)
}

::google::protobuf::uint8* SocketsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.SocketsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.SocketsRequest)
  return target;
}

size_t SocketsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.SocketsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SocketsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.SocketsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SocketsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SocketsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.SocketsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.SocketsRequest)
    MergeFrom(*source);
  }
}

void SocketsRequest::MergeFrom(const SocketsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.SocketsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SocketsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.SocketsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocketsRequest::CopyFrom(const SocketsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.SocketsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocketsRequest::IsInitialized() const {
  return true;
}

void SocketsRequest::Swap(SocketsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocketsRequest::InternalSwap(SocketsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SocketsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SocketsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocketsResponse::SocketsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_SocketsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.SocketsResponse)
}
SocketsResponse::SocketsResponse(const SocketsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.SocketsResponse)
}

void SocketsResponse::SharedCtor() {
}

SocketsResponse::~SocketsResponse() {
  // @@protoc_insertion_point(destructor:brpc.SocketsResponse)
  SharedDtor();
}

void SocketsResponse::SharedDtor() {
}

void SocketsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SocketsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SocketsResponse& SocketsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_SocketsResponse.base);
  return *internal_default_instance();
}


void SocketsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.SocketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SocketsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.SocketsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.SocketsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.SocketsResponse)
  return false;
#undef DO_
}

void SocketsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.SocketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.SocketsResponse)
}

::google::protobuf::uint8* SocketsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.SocketsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.SocketsResponse)
  return target;
}

size_t SocketsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.SocketsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SocketsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.SocketsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SocketsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SocketsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.SocketsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.SocketsResponse)
    MergeFrom(*source);
  }
}

void SocketsResponse::MergeFrom(const SocketsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.SocketsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SocketsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.SocketsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocketsResponse::CopyFrom(const SocketsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.SocketsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocketsResponse::IsInitialized() const {
  return true;
}

void SocketsResponse::Swap(SocketsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocketsResponse::InternalSwap(SocketsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SocketsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RpczRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpczRequest::RpczRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_RpczRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RpczRequest)
}
RpczRequest::RpczRequest(const RpczRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.RpczRequest)
}

void RpczRequest::SharedCtor() {
}

RpczRequest::~RpczRequest() {
  // @@protoc_insertion_point(destructor:brpc.RpczRequest)
  SharedDtor();
}

void RpczRequest::SharedDtor() {
}

void RpczRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RpczRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpczRequest& RpczRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_RpczRequest.base);
  return *internal_default_instance();
}


void RpczRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RpczRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RpczRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RpczRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RpczRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RpczRequest)
  return false;
#undef DO_
}

void RpczRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RpczRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RpczRequest)
}

::google::protobuf::uint8* RpczRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RpczRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RpczRequest)
  return target;
}

size_t RpczRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RpczRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpczRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RpczRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RpczRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpczRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RpczRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RpczRequest)
    MergeFrom(*source);
  }
}

void RpczRequest::MergeFrom(const RpczRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RpczRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RpczRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RpczRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpczRequest::CopyFrom(const RpczRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RpczRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpczRequest::IsInitialized() const {
  return true;
}

void RpczRequest::Swap(RpczRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpczRequest::InternalSwap(RpczRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RpczRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RpczResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpczResponse::RpczResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_RpczResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RpczResponse)
}
RpczResponse::RpczResponse(const RpczResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.RpczResponse)
}

void RpczResponse::SharedCtor() {
}

RpczResponse::~RpczResponse() {
  // @@protoc_insertion_point(destructor:brpc.RpczResponse)
  SharedDtor();
}

void RpczResponse::SharedDtor() {
}

void RpczResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RpczResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpczResponse& RpczResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_RpczResponse.base);
  return *internal_default_instance();
}


void RpczResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RpczResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RpczResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RpczResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RpczResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RpczResponse)
  return false;
#undef DO_
}

void RpczResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RpczResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RpczResponse)
}

::google::protobuf::uint8* RpczResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RpczResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RpczResponse)
  return target;
}

size_t RpczResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RpczResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpczResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RpczResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RpczResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpczResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RpczResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RpczResponse)
    MergeFrom(*source);
  }
}

void RpczResponse::MergeFrom(const RpczResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RpczResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RpczResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RpczResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpczResponse::CopyFrom(const RpczResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RpczResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpczResponse::IsInitialized() const {
  return true;
}

void RpczResponse::Swap(RpczResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpczResponse::InternalSwap(RpczResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RpczResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThreadsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThreadsRequest::ThreadsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ThreadsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ThreadsRequest)
}
ThreadsRequest::ThreadsRequest(const ThreadsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ThreadsRequest)
}

void ThreadsRequest::SharedCtor() {
}

ThreadsRequest::~ThreadsRequest() {
  // @@protoc_insertion_point(destructor:brpc.ThreadsRequest)
  SharedDtor();
}

void ThreadsRequest::SharedDtor() {
}

void ThreadsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ThreadsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThreadsRequest& ThreadsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ThreadsRequest.base);
  return *internal_default_instance();
}


void ThreadsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ThreadsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ThreadsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ThreadsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ThreadsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ThreadsRequest)
  return false;
#undef DO_
}

void ThreadsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ThreadsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ThreadsRequest)
}

::google::protobuf::uint8* ThreadsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ThreadsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ThreadsRequest)
  return target;
}

size_t ThreadsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ThreadsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ThreadsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ThreadsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ThreadsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThreadsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ThreadsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ThreadsRequest)
    MergeFrom(*source);
  }
}

void ThreadsRequest::MergeFrom(const ThreadsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ThreadsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ThreadsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ThreadsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThreadsRequest::CopyFrom(const ThreadsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ThreadsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThreadsRequest::IsInitialized() const {
  return true;
}

void ThreadsRequest::Swap(ThreadsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThreadsRequest::InternalSwap(ThreadsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ThreadsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ThreadsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThreadsResponse::ThreadsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ThreadsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ThreadsResponse)
}
ThreadsResponse::ThreadsResponse(const ThreadsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ThreadsResponse)
}

void ThreadsResponse::SharedCtor() {
}

ThreadsResponse::~ThreadsResponse() {
  // @@protoc_insertion_point(destructor:brpc.ThreadsResponse)
  SharedDtor();
}

void ThreadsResponse::SharedDtor() {
}

void ThreadsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ThreadsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThreadsResponse& ThreadsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ThreadsResponse.base);
  return *internal_default_instance();
}


void ThreadsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ThreadsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ThreadsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ThreadsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ThreadsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ThreadsResponse)
  return false;
#undef DO_
}

void ThreadsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ThreadsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ThreadsResponse)
}

::google::protobuf::uint8* ThreadsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ThreadsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ThreadsResponse)
  return target;
}

size_t ThreadsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ThreadsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ThreadsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ThreadsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ThreadsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThreadsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ThreadsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ThreadsResponse)
    MergeFrom(*source);
  }
}

void ThreadsResponse::MergeFrom(const ThreadsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ThreadsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ThreadsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ThreadsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThreadsResponse::CopyFrom(const ThreadsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ThreadsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThreadsResponse::IsInitialized() const {
  return true;
}

void ThreadsResponse::Swap(ThreadsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThreadsResponse::InternalSwap(ThreadsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ThreadsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DirRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirRequest::DirRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_DirRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.DirRequest)
}
DirRequest::DirRequest(const DirRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.DirRequest)
}

void DirRequest::SharedCtor() {
}

DirRequest::~DirRequest() {
  // @@protoc_insertion_point(destructor:brpc.DirRequest)
  SharedDtor();
}

void DirRequest::SharedDtor() {
}

void DirRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DirRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DirRequest& DirRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_DirRequest.base);
  return *internal_default_instance();
}


void DirRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.DirRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DirRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.DirRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.DirRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.DirRequest)
  return false;
#undef DO_
}

void DirRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.DirRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.DirRequest)
}

::google::protobuf::uint8* DirRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.DirRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.DirRequest)
  return target;
}

size_t DirRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.DirRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.DirRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DirRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.DirRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.DirRequest)
    MergeFrom(*source);
  }
}

void DirRequest::MergeFrom(const DirRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.DirRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DirRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.DirRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirRequest::CopyFrom(const DirRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.DirRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirRequest::IsInitialized() const {
  return true;
}

void DirRequest::Swap(DirRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirRequest::InternalSwap(DirRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DirRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DirResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirResponse::DirResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_DirResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.DirResponse)
}
DirResponse::DirResponse(const DirResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.DirResponse)
}

void DirResponse::SharedCtor() {
}

DirResponse::~DirResponse() {
  // @@protoc_insertion_point(destructor:brpc.DirResponse)
  SharedDtor();
}

void DirResponse::SharedDtor() {
}

void DirResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DirResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DirResponse& DirResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_DirResponse.base);
  return *internal_default_instance();
}


void DirResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.DirResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DirResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.DirResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.DirResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.DirResponse)
  return false;
#undef DO_
}

void DirResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.DirResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.DirResponse)
}

::google::protobuf::uint8* DirResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.DirResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.DirResponse)
  return target;
}

size_t DirResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.DirResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.DirResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DirResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.DirResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.DirResponse)
    MergeFrom(*source);
  }
}

void DirResponse::MergeFrom(const DirResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.DirResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DirResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.DirResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirResponse::CopyFrom(const DirResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.DirResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirResponse::IsInitialized() const {
  return true;
}

void DirResponse::Swap(DirResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirResponse::InternalSwap(DirResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DirResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VLogRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VLogRequest::VLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VLogRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.VLogRequest)
}
VLogRequest::VLogRequest(const VLogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VLogRequest)
}

void VLogRequest::SharedCtor() {
}

VLogRequest::~VLogRequest() {
  // @@protoc_insertion_point(destructor:brpc.VLogRequest)
  SharedDtor();
}

void VLogRequest::SharedDtor() {
}

void VLogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VLogRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VLogRequest& VLogRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VLogRequest.base);
  return *internal_default_instance();
}


void VLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.VLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.VLogRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.VLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.VLogRequest)
  return false;
#undef DO_
}

void VLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.VLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.VLogRequest)
}

::google::protobuf::uint8* VLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.VLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.VLogRequest)
  return target;
}

size_t VLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.VLogRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.VLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VLogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.VLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.VLogRequest)
    MergeFrom(*source);
  }
}

void VLogRequest::MergeFrom(const VLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.VLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.VLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VLogRequest::CopyFrom(const VLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.VLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VLogRequest::IsInitialized() const {
  return true;
}

void VLogRequest::Swap(VLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VLogRequest::InternalSwap(VLogRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VLogRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VLogResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VLogResponse::VLogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VLogResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.VLogResponse)
}
VLogResponse::VLogResponse(const VLogResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.VLogResponse)
}

void VLogResponse::SharedCtor() {
}

VLogResponse::~VLogResponse() {
  // @@protoc_insertion_point(destructor:brpc.VLogResponse)
  SharedDtor();
}

void VLogResponse::SharedDtor() {
}

void VLogResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VLogResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VLogResponse& VLogResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_VLogResponse.base);
  return *internal_default_instance();
}


void VLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.VLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VLogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.VLogResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.VLogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.VLogResponse)
  return false;
#undef DO_
}

void VLogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.VLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.VLogResponse)
}

::google::protobuf::uint8* VLogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.VLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.VLogResponse)
  return target;
}

size_t VLogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.VLogResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VLogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.VLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VLogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VLogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.VLogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.VLogResponse)
    MergeFrom(*source);
  }
}

void VLogResponse::MergeFrom(const VLogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.VLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VLogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.VLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VLogResponse::CopyFrom(const VLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.VLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VLogResponse::IsInitialized() const {
  return true;
}

void VLogResponse::Swap(VLogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VLogResponse::InternalSwap(VLogResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VLogResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MetricsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricsRequest::MetricsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_MetricsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.MetricsRequest)
}
MetricsRequest::MetricsRequest(const MetricsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.MetricsRequest)
}

void MetricsRequest::SharedCtor() {
}

MetricsRequest::~MetricsRequest() {
  // @@protoc_insertion_point(destructor:brpc.MetricsRequest)
  SharedDtor();
}

void MetricsRequest::SharedDtor() {
}

void MetricsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MetricsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetricsRequest& MetricsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_MetricsRequest.base);
  return *internal_default_instance();
}


void MetricsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.MetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetricsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.MetricsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.MetricsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.MetricsRequest)
  return false;
#undef DO_
}

void MetricsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.MetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.MetricsRequest)
}

::google::protobuf::uint8* MetricsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.MetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.MetricsRequest)
  return target;
}

size_t MetricsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.MetricsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.MetricsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.MetricsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.MetricsRequest)
    MergeFrom(*source);
  }
}

void MetricsRequest::MergeFrom(const MetricsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.MetricsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MetricsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.MetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricsRequest::CopyFrom(const MetricsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.MetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricsRequest::IsInitialized() const {
  return true;
}

void MetricsRequest::Swap(MetricsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricsRequest::InternalSwap(MetricsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MetricsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MetricsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricsResponse::MetricsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_MetricsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.MetricsResponse)
}
MetricsResponse::MetricsResponse(const MetricsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.MetricsResponse)
}

void MetricsResponse::SharedCtor() {
}

MetricsResponse::~MetricsResponse() {
  // @@protoc_insertion_point(destructor:brpc.MetricsResponse)
  SharedDtor();
}

void MetricsResponse::SharedDtor() {
}

void MetricsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MetricsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetricsResponse& MetricsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_MetricsResponse.base);
  return *internal_default_instance();
}


void MetricsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.MetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MetricsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.MetricsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.MetricsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.MetricsResponse)
  return false;
#undef DO_
}

void MetricsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.MetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.MetricsResponse)
}

::google::protobuf::uint8* MetricsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.MetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.MetricsResponse)
  return target;
}

size_t MetricsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.MetricsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.MetricsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.MetricsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.MetricsResponse)
    MergeFrom(*source);
  }
}

void MetricsResponse::MergeFrom(const MetricsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.MetricsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MetricsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.MetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricsResponse::CopyFrom(const MetricsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.MetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricsResponse::IsInitialized() const {
  return true;
}

void MetricsResponse::Swap(MetricsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricsResponse::InternalSwap(MetricsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MetricsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BadMethodRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BadMethodRequest::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BadMethodRequest::BadMethodRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_BadMethodRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.BadMethodRequest)
}
BadMethodRequest::BadMethodRequest(const BadMethodRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_service_name()) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:brpc.BadMethodRequest)
}

void BadMethodRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BadMethodRequest::~BadMethodRequest() {
  // @@protoc_insertion_point(destructor:brpc.BadMethodRequest)
  SharedDtor();
}

void BadMethodRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BadMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BadMethodRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BadMethodRequest& BadMethodRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_BadMethodRequest.base);
  return *internal_default_instance();
}


void BadMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.BadMethodRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    service_name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BadMethodRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.BadMethodRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.BadMethodRequest.service_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.BadMethodRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.BadMethodRequest)
  return false;
#undef DO_
}

void BadMethodRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.BadMethodRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string service_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.BadMethodRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.BadMethodRequest)
}

::google::protobuf::uint8* BadMethodRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.BadMethodRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string service_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.BadMethodRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.BadMethodRequest)
  return target;
}

size_t BadMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.BadMethodRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string service_name = 1;
  if (has_service_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BadMethodRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.BadMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BadMethodRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BadMethodRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.BadMethodRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.BadMethodRequest)
    MergeFrom(*source);
  }
}

void BadMethodRequest::MergeFrom(const BadMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.BadMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_name()) {
    set_has_service_name();
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void BadMethodRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.BadMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BadMethodRequest::CopyFrom(const BadMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.BadMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BadMethodRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void BadMethodRequest::Swap(BadMethodRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BadMethodRequest::InternalSwap(BadMethodRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BadMethodRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BadMethodResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BadMethodResponse::BadMethodResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_BadMethodResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.BadMethodResponse)
}
BadMethodResponse::BadMethodResponse(const BadMethodResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.BadMethodResponse)
}

void BadMethodResponse::SharedCtor() {
}

BadMethodResponse::~BadMethodResponse() {
  // @@protoc_insertion_point(destructor:brpc.BadMethodResponse)
  SharedDtor();
}

void BadMethodResponse::SharedDtor() {
}

void BadMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BadMethodResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BadMethodResponse& BadMethodResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_BadMethodResponse.base);
  return *internal_default_instance();
}


void BadMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.BadMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BadMethodResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.BadMethodResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.BadMethodResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.BadMethodResponse)
  return false;
#undef DO_
}

void BadMethodResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.BadMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.BadMethodResponse)
}

::google::protobuf::uint8* BadMethodResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.BadMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.BadMethodResponse)
  return target;
}

size_t BadMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.BadMethodResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BadMethodResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.BadMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BadMethodResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BadMethodResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.BadMethodResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.BadMethodResponse)
    MergeFrom(*source);
  }
}

void BadMethodResponse::MergeFrom(const BadMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.BadMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BadMethodResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.BadMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BadMethodResponse::CopyFrom(const BadMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.BadMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BadMethodResponse::IsInitialized() const {
  return true;
}

void BadMethodResponse::Swap(BadMethodResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BadMethodResponse::InternalSwap(BadMethodResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BadMethodResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProfileRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileRequest::ProfileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ProfileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ProfileRequest)
}
ProfileRequest::ProfileRequest(const ProfileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ProfileRequest)
}

void ProfileRequest::SharedCtor() {
}

ProfileRequest::~ProfileRequest() {
  // @@protoc_insertion_point(destructor:brpc.ProfileRequest)
  SharedDtor();
}

void ProfileRequest::SharedDtor() {
}

void ProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileRequest& ProfileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ProfileRequest.base);
  return *internal_default_instance();
}


void ProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProfileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ProfileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ProfileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ProfileRequest)
  return false;
#undef DO_
}

void ProfileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ProfileRequest)
}

::google::protobuf::uint8* ProfileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ProfileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ProfileRequest)
  return target;
}

size_t ProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ProfileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ProfileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ProfileRequest)
    MergeFrom(*source);
  }
}

void ProfileRequest::MergeFrom(const ProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProfileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileRequest::CopyFrom(const ProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileRequest::IsInitialized() const {
  return true;
}

void ProfileRequest::Swap(ProfileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileRequest::InternalSwap(ProfileRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProfileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileResponse::ProfileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ProfileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.ProfileResponse)
}
ProfileResponse::ProfileResponse(const ProfileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.ProfileResponse)
}

void ProfileResponse::SharedCtor() {
}

ProfileResponse::~ProfileResponse() {
  // @@protoc_insertion_point(destructor:brpc.ProfileResponse)
  SharedDtor();
}

void ProfileResponse::SharedDtor() {
}

void ProfileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProfileResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileResponse& ProfileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_ProfileResponse.base);
  return *internal_default_instance();
}


void ProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.ProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProfileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.ProfileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.ProfileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.ProfileResponse)
  return false;
#undef DO_
}

void ProfileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.ProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.ProfileResponse)
}

::google::protobuf::uint8* ProfileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.ProfileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.ProfileResponse)
  return target;
}

size_t ProfileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.ProfileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProfileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.ProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.ProfileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.ProfileResponse)
    MergeFrom(*source);
  }
}

void ProfileResponse::MergeFrom(const ProfileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.ProfileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProfileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.ProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileResponse::CopyFrom(const ProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.ProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileResponse::IsInitialized() const {
  return true;
}

void ProfileResponse::Swap(ProfileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileResponse::InternalSwap(ProfileResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProfileResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotspotsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotspotsRequest::HotspotsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_HotspotsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.HotspotsRequest)
}
HotspotsRequest::HotspotsRequest(const HotspotsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.HotspotsRequest)
}

void HotspotsRequest::SharedCtor() {
}

HotspotsRequest::~HotspotsRequest() {
  // @@protoc_insertion_point(destructor:brpc.HotspotsRequest)
  SharedDtor();
}

void HotspotsRequest::SharedDtor() {
}

void HotspotsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotspotsRequest::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotspotsRequest& HotspotsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_HotspotsRequest.base);
  return *internal_default_instance();
}


void HotspotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.HotspotsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HotspotsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.HotspotsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.HotspotsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.HotspotsRequest)
  return false;
#undef DO_
}

void HotspotsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.HotspotsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.HotspotsRequest)
}

::google::protobuf::uint8* HotspotsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.HotspotsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.HotspotsRequest)
  return target;
}

size_t HotspotsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.HotspotsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotspotsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.HotspotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HotspotsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotspotsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.HotspotsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.HotspotsRequest)
    MergeFrom(*source);
  }
}

void HotspotsRequest::MergeFrom(const HotspotsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.HotspotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HotspotsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.HotspotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotspotsRequest::CopyFrom(const HotspotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.HotspotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotspotsRequest::IsInitialized() const {
  return true;
}

void HotspotsRequest::Swap(HotspotsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotspotsRequest::InternalSwap(HotspotsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotspotsRequest::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HotspotsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HotspotsResponse::HotspotsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_HotspotsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.HotspotsResponse)
}
HotspotsResponse::HotspotsResponse(const HotspotsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.HotspotsResponse)
}

void HotspotsResponse::SharedCtor() {
}

HotspotsResponse::~HotspotsResponse() {
  // @@protoc_insertion_point(destructor:brpc.HotspotsResponse)
  SharedDtor();
}

void HotspotsResponse::SharedDtor() {
}

void HotspotsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HotspotsResponse::descriptor() {
  ::protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HotspotsResponse& HotspotsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fbuiltin_5fservice_2eproto::scc_info_HotspotsResponse.base);
  return *internal_default_instance();
}


void HotspotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.HotspotsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HotspotsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.HotspotsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.HotspotsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.HotspotsResponse)
  return false;
#undef DO_
}

void HotspotsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.HotspotsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.HotspotsResponse)
}

::google::protobuf::uint8* HotspotsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.HotspotsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.HotspotsResponse)
  return target;
}

size_t HotspotsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.HotspotsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HotspotsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.HotspotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HotspotsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HotspotsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.HotspotsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.HotspotsResponse)
    MergeFrom(*source);
  }
}

void HotspotsResponse::MergeFrom(const HotspotsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.HotspotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HotspotsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.HotspotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HotspotsResponse::CopyFrom(const HotspotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.HotspotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HotspotsResponse::IsInitialized() const {
  return true;
}

void HotspotsResponse::Swap(HotspotsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HotspotsResponse::InternalSwap(HotspotsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HotspotsResponse::GetMetadata() const {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

index::~index() {}

const ::google::protobuf::ServiceDescriptor* index::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* index::GetDescriptor() {
  return descriptor();
}

void index::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::IndexRequest*,
                         ::brpc::IndexResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void index::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::IndexRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::IndexResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& index::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::IndexRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& index::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::IndexResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

index_Stub::index_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
index_Stub::index_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
index_Stub::~index_Stub() {
  if (owns_channel_) delete channel_;
}

void index_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::IndexRequest* request,
                              ::brpc::IndexResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

version::~version() {}

const ::google::protobuf::ServiceDescriptor* version::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[1];
}

const ::google::protobuf::ServiceDescriptor* version::GetDescriptor() {
  return descriptor();
}

void version::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::VersionRequest*,
                         ::brpc::VersionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void version::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[1]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::VersionRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::VersionResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& version::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VersionRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& version::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VersionResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

version_Stub::version_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
version_Stub::version_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
version_Stub::~version_Stub() {
  if (owns_channel_) delete channel_;
}

void version_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::VersionRequest* request,
                              ::brpc::VersionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

health::~health() {}

const ::google::protobuf::ServiceDescriptor* health::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[2];
}

const ::google::protobuf::ServiceDescriptor* health::GetDescriptor() {
  return descriptor();
}

void health::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::HealthRequest*,
                         ::brpc::HealthResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void health::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[2]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::HealthRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HealthResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& health::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::HealthRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& health::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::HealthResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

health_Stub::health_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
health_Stub::health_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
health_Stub::~health_Stub() {
  if (owns_channel_) delete channel_;
}

void health_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::HealthRequest* request,
                              ::brpc::HealthResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

status::~status() {}

const ::google::protobuf::ServiceDescriptor* status::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[3];
}

const ::google::protobuf::ServiceDescriptor* status::GetDescriptor() {
  return descriptor();
}

void status::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::StatusRequest*,
                         ::brpc::StatusResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void status::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[3]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::StatusRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::StatusResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& status::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::StatusRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& status::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::StatusResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

status_Stub::status_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
status_Stub::status_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
status_Stub::~status_Stub() {
  if (owns_channel_) delete channel_;
}

void status_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::StatusRequest* request,
                              ::brpc::StatusResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

protobufs::~protobufs() {}

const ::google::protobuf::ServiceDescriptor* protobufs::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[4];
}

const ::google::protobuf::ServiceDescriptor* protobufs::GetDescriptor() {
  return descriptor();
}

void protobufs::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::ProtobufsRequest*,
                         ::brpc::ProtobufsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void protobufs::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[4]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::ProtobufsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ProtobufsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& protobufs::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ProtobufsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& protobufs::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ProtobufsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

protobufs_Stub::protobufs_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
protobufs_Stub::protobufs_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
protobufs_Stub::~protobufs_Stub() {
  if (owns_channel_) delete channel_;
}

void protobufs_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::ProtobufsRequest* request,
                              ::brpc::ProtobufsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

connections::~connections() {}

const ::google::protobuf::ServiceDescriptor* connections::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[5];
}

const ::google::protobuf::ServiceDescriptor* connections::GetDescriptor() {
  return descriptor();
}

void connections::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::ConnectionsRequest*,
                         ::brpc::ConnectionsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void connections::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[5]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::ConnectionsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ConnectionsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& connections::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ConnectionsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& connections::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ConnectionsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

connections_Stub::connections_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
connections_Stub::connections_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
connections_Stub::~connections_Stub() {
  if (owns_channel_) delete channel_;
}

void connections_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::ConnectionsRequest* request,
                              ::brpc::ConnectionsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

list::~list() {}

const ::google::protobuf::ServiceDescriptor* list::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[6];
}

const ::google::protobuf::ServiceDescriptor* list::GetDescriptor() {
  return descriptor();
}

void list::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::ListRequest*,
                         ::brpc::ListResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void list::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[6]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::ListRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ListResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& list::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ListRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& list::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ListResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

list_Stub::list_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
list_Stub::list_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
list_Stub::~list_Stub() {
  if (owns_channel_) delete channel_;
}

void list_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::ListRequest* request,
                              ::brpc::ListResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

threads::~threads() {}

const ::google::protobuf::ServiceDescriptor* threads::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[7];
}

const ::google::protobuf::ServiceDescriptor* threads::GetDescriptor() {
  return descriptor();
}

void threads::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::ThreadsRequest*,
                         ::brpc::ThreadsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void threads::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[7]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::ThreadsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ThreadsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& threads::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ThreadsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& threads::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ThreadsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

threads_Stub::threads_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
threads_Stub::threads_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
threads_Stub::~threads_Stub() {
  if (owns_channel_) delete channel_;
}

void threads_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::ThreadsRequest* request,
                              ::brpc::ThreadsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

vlog::~vlog() {}

const ::google::protobuf::ServiceDescriptor* vlog::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[8];
}

const ::google::protobuf::ServiceDescriptor* vlog::GetDescriptor() {
  return descriptor();
}

void vlog::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::VLogRequest*,
                         ::brpc::VLogResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void vlog::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[8]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::VLogRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::VLogResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& vlog::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VLogRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& vlog::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VLogResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

vlog_Stub::vlog_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
vlog_Stub::vlog_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
vlog_Stub::~vlog_Stub() {
  if (owns_channel_) delete channel_;
}

void vlog_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::VLogRequest* request,
                              ::brpc::VLogResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

bthreads::~bthreads() {}

const ::google::protobuf::ServiceDescriptor* bthreads::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[9];
}

const ::google::protobuf::ServiceDescriptor* bthreads::GetDescriptor() {
  return descriptor();
}

void bthreads::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::BthreadsRequest*,
                         ::brpc::BthreadsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void bthreads::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[9]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::BthreadsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::BthreadsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& bthreads::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::BthreadsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& bthreads::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::BthreadsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

bthreads_Stub::bthreads_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
bthreads_Stub::bthreads_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
bthreads_Stub::~bthreads_Stub() {
  if (owns_channel_) delete channel_;
}

void bthreads_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::BthreadsRequest* request,
                              ::brpc::BthreadsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

ids::~ids() {}

const ::google::protobuf::ServiceDescriptor* ids::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[10];
}

const ::google::protobuf::ServiceDescriptor* ids::GetDescriptor() {
  return descriptor();
}

void ids::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::IdsRequest*,
                         ::brpc::IdsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void ids::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[10]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::IdsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::IdsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ids::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::IdsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& ids::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::IdsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ids_Stub::ids_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ids_Stub::ids_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ids_Stub::~ids_Stub() {
  if (owns_channel_) delete channel_;
}

void ids_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::IdsRequest* request,
                              ::brpc::IdsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

sockets::~sockets() {}

const ::google::protobuf::ServiceDescriptor* sockets::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[11];
}

const ::google::protobuf::ServiceDescriptor* sockets::GetDescriptor() {
  return descriptor();
}

void sockets::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::SocketsRequest*,
                         ::brpc::SocketsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void sockets::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[11]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::SocketsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::SocketsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& sockets::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::SocketsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& sockets::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::SocketsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

sockets_Stub::sockets_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
sockets_Stub::sockets_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
sockets_Stub::~sockets_Stub() {
  if (owns_channel_) delete channel_;
}

void sockets_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::SocketsRequest* request,
                              ::brpc::SocketsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

brpc_metrics::~brpc_metrics() {}

const ::google::protobuf::ServiceDescriptor* brpc_metrics::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[12];
}

const ::google::protobuf::ServiceDescriptor* brpc_metrics::GetDescriptor() {
  return descriptor();
}

void brpc_metrics::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::MetricsRequest*,
                         ::brpc::MetricsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void brpc_metrics::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[12]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::MetricsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::MetricsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& brpc_metrics::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::MetricsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& brpc_metrics::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::MetricsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

brpc_metrics_Stub::brpc_metrics_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
brpc_metrics_Stub::brpc_metrics_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
brpc_metrics_Stub::~brpc_metrics_Stub() {
  if (owns_channel_) delete channel_;
}

void brpc_metrics_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::MetricsRequest* request,
                              ::brpc::MetricsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

badmethod::~badmethod() {}

const ::google::protobuf::ServiceDescriptor* badmethod::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[13];
}

const ::google::protobuf::ServiceDescriptor* badmethod::GetDescriptor() {
  return descriptor();
}

void badmethod::no_method(::google::protobuf::RpcController* controller,
                         const ::brpc::BadMethodRequest*,
                         ::brpc::BadMethodResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method no_method() not implemented.");
  done->Run();
}

void badmethod::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[13]);
  switch(method->index()) {
    case 0:
      no_method(controller,
             ::google::protobuf::down_cast<const ::brpc::BadMethodRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::BadMethodResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& badmethod::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::BadMethodRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& badmethod::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::BadMethodResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

badmethod_Stub::badmethod_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
badmethod_Stub::badmethod_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
badmethod_Stub::~badmethod_Stub() {
  if (owns_channel_) delete channel_;
}

void badmethod_Stub::no_method(::google::protobuf::RpcController* controller,
                              const ::brpc::BadMethodRequest* request,
                              ::brpc::BadMethodResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

pprof::~pprof() {}

const ::google::protobuf::ServiceDescriptor* pprof::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[14];
}

const ::google::protobuf::ServiceDescriptor* pprof::GetDescriptor() {
  return descriptor();
}

void pprof::profile(::google::protobuf::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method profile() not implemented.");
  done->Run();
}

void pprof::contention(::google::protobuf::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method contention() not implemented.");
  done->Run();
}

void pprof::heap(::google::protobuf::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method heap() not implemented.");
  done->Run();
}

void pprof::symbol(::google::protobuf::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method symbol() not implemented.");
  done->Run();
}

void pprof::cmdline(::google::protobuf::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method cmdline() not implemented.");
  done->Run();
}

void pprof::growth(::google::protobuf::RpcController* controller,
                         const ::brpc::ProfileRequest*,
                         ::brpc::ProfileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method growth() not implemented.");
  done->Run();
}

void pprof::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[14]);
  switch(method->index()) {
    case 0:
      profile(controller,
             ::google::protobuf::down_cast<const ::brpc::ProfileRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ProfileResponse*>(response),
             done);
      break;
    case 1:
      contention(controller,
             ::google::protobuf::down_cast<const ::brpc::ProfileRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ProfileResponse*>(response),
             done);
      break;
    case 2:
      heap(controller,
             ::google::protobuf::down_cast<const ::brpc::ProfileRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ProfileResponse*>(response),
             done);
      break;
    case 3:
      symbol(controller,
             ::google::protobuf::down_cast<const ::brpc::ProfileRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ProfileResponse*>(response),
             done);
      break;
    case 4:
      cmdline(controller,
             ::google::protobuf::down_cast<const ::brpc::ProfileRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ProfileResponse*>(response),
             done);
      break;
    case 5:
      growth(controller,
             ::google::protobuf::down_cast<const ::brpc::ProfileRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::ProfileResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& pprof::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ProfileRequest::default_instance();
    case 1:
      return ::brpc::ProfileRequest::default_instance();
    case 2:
      return ::brpc::ProfileRequest::default_instance();
    case 3:
      return ::brpc::ProfileRequest::default_instance();
    case 4:
      return ::brpc::ProfileRequest::default_instance();
    case 5:
      return ::brpc::ProfileRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& pprof::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::ProfileResponse::default_instance();
    case 1:
      return ::brpc::ProfileResponse::default_instance();
    case 2:
      return ::brpc::ProfileResponse::default_instance();
    case 3:
      return ::brpc::ProfileResponse::default_instance();
    case 4:
      return ::brpc::ProfileResponse::default_instance();
    case 5:
      return ::brpc::ProfileResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

pprof_Stub::pprof_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
pprof_Stub::pprof_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
pprof_Stub::~pprof_Stub() {
  if (owns_channel_) delete channel_;
}

void pprof_Stub::profile(::google::protobuf::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void pprof_Stub::contention(::google::protobuf::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void pprof_Stub::heap(::google::protobuf::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void pprof_Stub::symbol(::google::protobuf::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void pprof_Stub::cmdline(::google::protobuf::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void pprof_Stub::growth(::google::protobuf::RpcController* controller,
                              const ::brpc::ProfileRequest* request,
                              ::brpc::ProfileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
// ===================================================================

hotspots::~hotspots() {}

const ::google::protobuf::ServiceDescriptor* hotspots::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[15];
}

const ::google::protobuf::ServiceDescriptor* hotspots::GetDescriptor() {
  return descriptor();
}

void hotspots::cpu(::google::protobuf::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method cpu() not implemented.");
  done->Run();
}

void hotspots::cpu_non_responsive(::google::protobuf::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method cpu_non_responsive() not implemented.");
  done->Run();
}

void hotspots::heap(::google::protobuf::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method heap() not implemented.");
  done->Run();
}

void hotspots::heap_non_responsive(::google::protobuf::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method heap_non_responsive() not implemented.");
  done->Run();
}

void hotspots::growth(::google::protobuf::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method growth() not implemented.");
  done->Run();
}

void hotspots::growth_non_responsive(::google::protobuf::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method growth_non_responsive() not implemented.");
  done->Run();
}

void hotspots::contention(::google::protobuf::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method contention() not implemented.");
  done->Run();
}

void hotspots::contention_non_responsive(::google::protobuf::RpcController* controller,
                         const ::brpc::HotspotsRequest*,
                         ::brpc::HotspotsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method contention_non_responsive() not implemented.");
  done->Run();
}

void hotspots::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[15]);
  switch(method->index()) {
    case 0:
      cpu(controller,
             ::google::protobuf::down_cast<const ::brpc::HotspotsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HotspotsResponse*>(response),
             done);
      break;
    case 1:
      cpu_non_responsive(controller,
             ::google::protobuf::down_cast<const ::brpc::HotspotsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HotspotsResponse*>(response),
             done);
      break;
    case 2:
      heap(controller,
             ::google::protobuf::down_cast<const ::brpc::HotspotsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HotspotsResponse*>(response),
             done);
      break;
    case 3:
      heap_non_responsive(controller,
             ::google::protobuf::down_cast<const ::brpc::HotspotsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HotspotsResponse*>(response),
             done);
      break;
    case 4:
      growth(controller,
             ::google::protobuf::down_cast<const ::brpc::HotspotsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HotspotsResponse*>(response),
             done);
      break;
    case 5:
      growth_non_responsive(controller,
             ::google::protobuf::down_cast<const ::brpc::HotspotsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HotspotsResponse*>(response),
             done);
      break;
    case 6:
      contention(controller,
             ::google::protobuf::down_cast<const ::brpc::HotspotsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HotspotsResponse*>(response),
             done);
      break;
    case 7:
      contention_non_responsive(controller,
             ::google::protobuf::down_cast<const ::brpc::HotspotsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::HotspotsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& hotspots::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::HotspotsRequest::default_instance();
    case 1:
      return ::brpc::HotspotsRequest::default_instance();
    case 2:
      return ::brpc::HotspotsRequest::default_instance();
    case 3:
      return ::brpc::HotspotsRequest::default_instance();
    case 4:
      return ::brpc::HotspotsRequest::default_instance();
    case 5:
      return ::brpc::HotspotsRequest::default_instance();
    case 6:
      return ::brpc::HotspotsRequest::default_instance();
    case 7:
      return ::brpc::HotspotsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& hotspots::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::HotspotsResponse::default_instance();
    case 1:
      return ::brpc::HotspotsResponse::default_instance();
    case 2:
      return ::brpc::HotspotsResponse::default_instance();
    case 3:
      return ::brpc::HotspotsResponse::default_instance();
    case 4:
      return ::brpc::HotspotsResponse::default_instance();
    case 5:
      return ::brpc::HotspotsResponse::default_instance();
    case 6:
      return ::brpc::HotspotsResponse::default_instance();
    case 7:
      return ::brpc::HotspotsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

hotspots_Stub::hotspots_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
hotspots_Stub::hotspots_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
hotspots_Stub::~hotspots_Stub() {
  if (owns_channel_) delete channel_;
}

void hotspots_Stub::cpu(::google::protobuf::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void hotspots_Stub::cpu_non_responsive(::google::protobuf::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void hotspots_Stub::heap(::google::protobuf::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void hotspots_Stub::heap_non_responsive(::google::protobuf::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void hotspots_Stub::growth(::google::protobuf::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void hotspots_Stub::growth_non_responsive(::google::protobuf::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void hotspots_Stub::contention(::google::protobuf::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void hotspots_Stub::contention_non_responsive(::google::protobuf::RpcController* controller,
                              const ::brpc::HotspotsRequest* request,
                              ::brpc::HotspotsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
// ===================================================================

flags::~flags() {}

const ::google::protobuf::ServiceDescriptor* flags::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[16];
}

const ::google::protobuf::ServiceDescriptor* flags::GetDescriptor() {
  return descriptor();
}

void flags::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::FlagsRequest*,
                         ::brpc::FlagsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void flags::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[16]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::FlagsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::FlagsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& flags::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::FlagsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& flags::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::FlagsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

flags_Stub::flags_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
flags_Stub::flags_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
flags_Stub::~flags_Stub() {
  if (owns_channel_) delete channel_;
}

void flags_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::FlagsRequest* request,
                              ::brpc::FlagsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

vars::~vars() {}

const ::google::protobuf::ServiceDescriptor* vars::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[17];
}

const ::google::protobuf::ServiceDescriptor* vars::GetDescriptor() {
  return descriptor();
}

void vars::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::VarsRequest*,
                         ::brpc::VarsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void vars::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[17]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::VarsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::VarsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& vars::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VarsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& vars::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::VarsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

vars_Stub::vars_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
vars_Stub::vars_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
vars_Stub::~vars_Stub() {
  if (owns_channel_) delete channel_;
}

void vars_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::VarsRequest* request,
                              ::brpc::VarsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
// ===================================================================

rpcz::~rpcz() {}

const ::google::protobuf::ServiceDescriptor* rpcz::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[18];
}

const ::google::protobuf::ServiceDescriptor* rpcz::GetDescriptor() {
  return descriptor();
}

void rpcz::enable(::google::protobuf::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method enable() not implemented.");
  done->Run();
}

void rpcz::disable(::google::protobuf::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method disable() not implemented.");
  done->Run();
}

void rpcz::stats(::google::protobuf::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method stats() not implemented.");
  done->Run();
}

void rpcz::hex_log_id(::google::protobuf::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method hex_log_id() not implemented.");
  done->Run();
}

void rpcz::dec_log_id(::google::protobuf::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method dec_log_id() not implemented.");
  done->Run();
}

void rpcz::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::RpczRequest*,
                         ::brpc::RpczResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void rpcz::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[18]);
  switch(method->index()) {
    case 0:
      enable(controller,
             ::google::protobuf::down_cast<const ::brpc::RpczRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::RpczResponse*>(response),
             done);
      break;
    case 1:
      disable(controller,
             ::google::protobuf::down_cast<const ::brpc::RpczRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::RpczResponse*>(response),
             done);
      break;
    case 2:
      stats(controller,
             ::google::protobuf::down_cast<const ::brpc::RpczRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::RpczResponse*>(response),
             done);
      break;
    case 3:
      hex_log_id(controller,
             ::google::protobuf::down_cast<const ::brpc::RpczRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::RpczResponse*>(response),
             done);
      break;
    case 4:
      dec_log_id(controller,
             ::google::protobuf::down_cast<const ::brpc::RpczRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::RpczResponse*>(response),
             done);
      break;
    case 5:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::RpczRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::RpczResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& rpcz::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::RpczRequest::default_instance();
    case 1:
      return ::brpc::RpczRequest::default_instance();
    case 2:
      return ::brpc::RpczRequest::default_instance();
    case 3:
      return ::brpc::RpczRequest::default_instance();
    case 4:
      return ::brpc::RpczRequest::default_instance();
    case 5:
      return ::brpc::RpczRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& rpcz::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::RpczResponse::default_instance();
    case 1:
      return ::brpc::RpczResponse::default_instance();
    case 2:
      return ::brpc::RpczResponse::default_instance();
    case 3:
      return ::brpc::RpczResponse::default_instance();
    case 4:
      return ::brpc::RpczResponse::default_instance();
    case 5:
      return ::brpc::RpczResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

rpcz_Stub::rpcz_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
rpcz_Stub::rpcz_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
rpcz_Stub::~rpcz_Stub() {
  if (owns_channel_) delete channel_;
}

void rpcz_Stub::enable(::google::protobuf::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void rpcz_Stub::disable(::google::protobuf::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void rpcz_Stub::stats(::google::protobuf::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void rpcz_Stub::hex_log_id(::google::protobuf::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void rpcz_Stub::dec_log_id(::google::protobuf::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void rpcz_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::RpczRequest* request,
                              ::brpc::RpczResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
// ===================================================================

dir::~dir() {}

const ::google::protobuf::ServiceDescriptor* dir::descriptor() {
  protobuf_brpc_2fbuiltin_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[19];
}

const ::google::protobuf::ServiceDescriptor* dir::GetDescriptor() {
  return descriptor();
}

void dir::default_method(::google::protobuf::RpcController* controller,
                         const ::brpc::DirRequest*,
                         ::brpc::DirResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method default_method() not implemented.");
  done->Run();
}

void dir::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fbuiltin_5fservice_2eproto::file_level_service_descriptors[19]);
  switch(method->index()) {
    case 0:
      default_method(controller,
             ::google::protobuf::down_cast<const ::brpc::DirRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::DirResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& dir::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::DirRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& dir::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::DirResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

dir_Stub::dir_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
dir_Stub::dir_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
dir_Stub::~dir_Stub() {
  if (owns_channel_) delete channel_;
}

void dir_Stub::default_method(::google::protobuf::RpcController* controller,
                              const ::brpc::DirRequest* request,
                              ::brpc::DirResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace brpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::IndexRequest* Arena::CreateMaybeMessage< ::brpc::IndexRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::IndexRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::IndexResponse* Arena::CreateMaybeMessage< ::brpc::IndexResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::IndexResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::FlagsRequest* Arena::CreateMaybeMessage< ::brpc::FlagsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::FlagsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::FlagsResponse* Arena::CreateMaybeMessage< ::brpc::FlagsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::FlagsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::VersionRequest* Arena::CreateMaybeMessage< ::brpc::VersionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::VersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::VersionResponse* Arena::CreateMaybeMessage< ::brpc::VersionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::VersionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::HealthRequest* Arena::CreateMaybeMessage< ::brpc::HealthRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::HealthRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::HealthResponse* Arena::CreateMaybeMessage< ::brpc::HealthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::HealthResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::StatusRequest* Arena::CreateMaybeMessage< ::brpc::StatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::StatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::StatusResponse* Arena::CreateMaybeMessage< ::brpc::StatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::StatusResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ProtobufsRequest* Arena::CreateMaybeMessage< ::brpc::ProtobufsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ProtobufsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ProtobufsResponse* Arena::CreateMaybeMessage< ::brpc::ProtobufsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ProtobufsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ConnectionsRequest* Arena::CreateMaybeMessage< ::brpc::ConnectionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ConnectionsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ConnectionsResponse* Arena::CreateMaybeMessage< ::brpc::ConnectionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ConnectionsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ListRequest* Arena::CreateMaybeMessage< ::brpc::ListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ListResponse* Arena::CreateMaybeMessage< ::brpc::ListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ListResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::VarsRequest* Arena::CreateMaybeMessage< ::brpc::VarsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::VarsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::VarsResponse* Arena::CreateMaybeMessage< ::brpc::VarsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::VarsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::BthreadsRequest* Arena::CreateMaybeMessage< ::brpc::BthreadsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::BthreadsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::BthreadsResponse* Arena::CreateMaybeMessage< ::brpc::BthreadsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::BthreadsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::IdsRequest* Arena::CreateMaybeMessage< ::brpc::IdsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::IdsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::IdsResponse* Arena::CreateMaybeMessage< ::brpc::IdsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::IdsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::SocketsRequest* Arena::CreateMaybeMessage< ::brpc::SocketsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::SocketsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::SocketsResponse* Arena::CreateMaybeMessage< ::brpc::SocketsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::SocketsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RpczRequest* Arena::CreateMaybeMessage< ::brpc::RpczRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RpczRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RpczResponse* Arena::CreateMaybeMessage< ::brpc::RpczResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RpczResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ThreadsRequest* Arena::CreateMaybeMessage< ::brpc::ThreadsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ThreadsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ThreadsResponse* Arena::CreateMaybeMessage< ::brpc::ThreadsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ThreadsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::DirRequest* Arena::CreateMaybeMessage< ::brpc::DirRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::DirRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::DirResponse* Arena::CreateMaybeMessage< ::brpc::DirResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::DirResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::VLogRequest* Arena::CreateMaybeMessage< ::brpc::VLogRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::VLogRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::VLogResponse* Arena::CreateMaybeMessage< ::brpc::VLogResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::VLogResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::MetricsRequest* Arena::CreateMaybeMessage< ::brpc::MetricsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::MetricsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::MetricsResponse* Arena::CreateMaybeMessage< ::brpc::MetricsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::MetricsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::BadMethodRequest* Arena::CreateMaybeMessage< ::brpc::BadMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::BadMethodRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::BadMethodResponse* Arena::CreateMaybeMessage< ::brpc::BadMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::BadMethodResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ProfileRequest* Arena::CreateMaybeMessage< ::brpc::ProfileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ProfileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::ProfileResponse* Arena::CreateMaybeMessage< ::brpc::ProfileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::ProfileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::HotspotsRequest* Arena::CreateMaybeMessage< ::brpc::HotspotsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::HotspotsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::HotspotsResponse* Arena::CreateMaybeMessage< ::brpc::HotspotsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::HotspotsResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

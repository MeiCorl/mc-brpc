// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/get_js.proto

#include "brpc/get_js.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace brpc {
class GetJsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJsRequest>
      _instance;
} _GetJsRequest_default_instance_;
class GetJsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetJsResponse>
      _instance;
} _GetJsResponse_default_instance_;
}  // namespace brpc
namespace protobuf_brpc_2fget_5fjs_2eproto {
static void InitDefaultsGetJsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_GetJsRequest_default_instance_;
    new (ptr) ::brpc::GetJsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::GetJsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetJsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetJsRequest}, {}};

static void InitDefaultsGetJsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_GetJsResponse_default_instance_;
    new (ptr) ::brpc::GetJsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::GetJsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetJsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetJsResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetJsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetJsResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::GetJsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::GetJsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::GetJsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::GetJsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::brpc::GetJsRequest)},
  { 5, 10, sizeof(::brpc::GetJsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_GetJsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_GetJsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "brpc/get_js.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021brpc/get_js.proto\022\004brpc\"\016\n\014GetJsReques"
      "t\"\017\n\rGetJsResponse2\332\001\n\002js\0224\n\tsorttable\022\022"
      ".brpc.GetJsRequest\032\023.brpc.GetJsResponse\022"
      "5\n\njquery_min\022\022.brpc.GetJsRequest\032\023.brpc"
      ".GetJsResponse\0223\n\010flot_min\022\022.brpc.GetJsR"
      "equest\032\023.brpc.GetJsResponse\0222\n\007viz_min\022\022"
      ".brpc.GetJsRequest\032\023.brpc.GetJsResponseB"
      "\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 284);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "brpc/get_js.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_brpc_2fget_5fjs_2eproto
namespace brpc {

// ===================================================================

void GetJsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJsRequest::GetJsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fget_5fjs_2eproto::scc_info_GetJsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.GetJsRequest)
}
GetJsRequest::GetJsRequest(const GetJsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.GetJsRequest)
}

void GetJsRequest::SharedCtor() {
}

GetJsRequest::~GetJsRequest() {
  // @@protoc_insertion_point(destructor:brpc.GetJsRequest)
  SharedDtor();
}

void GetJsRequest::SharedDtor() {
}

void GetJsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetJsRequest::descriptor() {
  ::protobuf_brpc_2fget_5fjs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fget_5fjs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJsRequest& GetJsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fget_5fjs_2eproto::scc_info_GetJsRequest.base);
  return *internal_default_instance();
}


void GetJsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.GetJsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetJsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.GetJsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.GetJsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.GetJsRequest)
  return false;
#undef DO_
}

void GetJsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.GetJsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.GetJsRequest)
}

::google::protobuf::uint8* GetJsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.GetJsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.GetJsRequest)
  return target;
}

size_t GetJsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.GetJsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.GetJsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.GetJsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.GetJsRequest)
    MergeFrom(*source);
  }
}

void GetJsRequest::MergeFrom(const GetJsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.GetJsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetJsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.GetJsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJsRequest::CopyFrom(const GetJsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.GetJsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJsRequest::IsInitialized() const {
  return true;
}

void GetJsRequest::Swap(GetJsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJsRequest::InternalSwap(GetJsRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetJsRequest::GetMetadata() const {
  protobuf_brpc_2fget_5fjs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fget_5fjs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetJsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetJsResponse::GetJsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2fget_5fjs_2eproto::scc_info_GetJsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.GetJsResponse)
}
GetJsResponse::GetJsResponse(const GetJsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.GetJsResponse)
}

void GetJsResponse::SharedCtor() {
}

GetJsResponse::~GetJsResponse() {
  // @@protoc_insertion_point(destructor:brpc.GetJsResponse)
  SharedDtor();
}

void GetJsResponse::SharedDtor() {
}

void GetJsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetJsResponse::descriptor() {
  ::protobuf_brpc_2fget_5fjs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fget_5fjs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetJsResponse& GetJsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2fget_5fjs_2eproto::scc_info_GetJsResponse.base);
  return *internal_default_instance();
}


void GetJsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.GetJsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetJsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.GetJsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.GetJsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.GetJsResponse)
  return false;
#undef DO_
}

void GetJsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.GetJsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.GetJsResponse)
}

::google::protobuf::uint8* GetJsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.GetJsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.GetJsResponse)
  return target;
}

size_t GetJsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.GetJsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.GetJsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetJsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.GetJsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.GetJsResponse)
    MergeFrom(*source);
  }
}

void GetJsResponse::MergeFrom(const GetJsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.GetJsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetJsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.GetJsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJsResponse::CopyFrom(const GetJsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.GetJsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJsResponse::IsInitialized() const {
  return true;
}

void GetJsResponse::Swap(GetJsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetJsResponse::InternalSwap(GetJsResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetJsResponse::GetMetadata() const {
  protobuf_brpc_2fget_5fjs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2fget_5fjs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

js::~js() {}

const ::google::protobuf::ServiceDescriptor* js::descriptor() {
  protobuf_brpc_2fget_5fjs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_brpc_2fget_5fjs_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* js::GetDescriptor() {
  return descriptor();
}

void js::sorttable(::google::protobuf::RpcController* controller,
                         const ::brpc::GetJsRequest*,
                         ::brpc::GetJsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method sorttable() not implemented.");
  done->Run();
}

void js::jquery_min(::google::protobuf::RpcController* controller,
                         const ::brpc::GetJsRequest*,
                         ::brpc::GetJsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method jquery_min() not implemented.");
  done->Run();
}

void js::flot_min(::google::protobuf::RpcController* controller,
                         const ::brpc::GetJsRequest*,
                         ::brpc::GetJsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method flot_min() not implemented.");
  done->Run();
}

void js::viz_min(::google::protobuf::RpcController* controller,
                         const ::brpc::GetJsRequest*,
                         ::brpc::GetJsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method viz_min() not implemented.");
  done->Run();
}

void js::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_brpc_2fget_5fjs_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      sorttable(controller,
             ::google::protobuf::down_cast<const ::brpc::GetJsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::GetJsResponse*>(response),
             done);
      break;
    case 1:
      jquery_min(controller,
             ::google::protobuf::down_cast<const ::brpc::GetJsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::GetJsResponse*>(response),
             done);
      break;
    case 2:
      flot_min(controller,
             ::google::protobuf::down_cast<const ::brpc::GetJsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::GetJsResponse*>(response),
             done);
      break;
    case 3:
      viz_min(controller,
             ::google::protobuf::down_cast<const ::brpc::GetJsRequest*>(request),
             ::google::protobuf::down_cast< ::brpc::GetJsResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& js::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::GetJsRequest::default_instance();
    case 1:
      return ::brpc::GetJsRequest::default_instance();
    case 2:
      return ::brpc::GetJsRequest::default_instance();
    case 3:
      return ::brpc::GetJsRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& js::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::brpc::GetJsResponse::default_instance();
    case 1:
      return ::brpc::GetJsResponse::default_instance();
    case 2:
      return ::brpc::GetJsResponse::default_instance();
    case 3:
      return ::brpc::GetJsResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

js_Stub::js_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
js_Stub::js_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
js_Stub::~js_Stub() {
  if (owns_channel_) delete channel_;
}

void js_Stub::sorttable(::google::protobuf::RpcController* controller,
                              const ::brpc::GetJsRequest* request,
                              ::brpc::GetJsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void js_Stub::jquery_min(::google::protobuf::RpcController* controller,
                              const ::brpc::GetJsRequest* request,
                              ::brpc::GetJsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void js_Stub::flot_min(::google::protobuf::RpcController* controller,
                              const ::brpc::GetJsRequest* request,
                              ::brpc::GetJsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void js_Stub::viz_min(::google::protobuf::RpcController* controller,
                              const ::brpc::GetJsRequest* request,
                              ::brpc::GetJsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace brpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::GetJsRequest* Arena::CreateMaybeMessage< ::brpc::GetJsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::GetJsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::GetJsResponse* Arena::CreateMaybeMessage< ::brpc::GetJsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::GetJsResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

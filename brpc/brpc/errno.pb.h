// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/errno.proto

#ifndef PROTOBUF_INCLUDED_brpc_2ferrno_2eproto
#define PROTOBUF_INCLUDED_brpc_2ferrno_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_brpc_2ferrno_2eproto 

namespace protobuf_brpc_2ferrno_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_brpc_2ferrno_2eproto
namespace brpc {
}  // namespace brpc
namespace brpc {

enum Errno {
  ENOSERVICE = 1001,
  ENOMETHOD = 1002,
  EREQUEST = 1003,
  ERPCAUTH = 1004,
  ETOOMANYFAILS = 1005,
  EPCHANFINISH = 1006,
  EBACKUPREQUEST = 1007,
  ERPCTIMEDOUT = 1008,
  EFAILEDSOCKET = 1009,
  EHTTP = 1010,
  EOVERCROWDED = 1011,
  ERTMPPUBLISHABLE = 1012,
  ERTMPCREATESTREAM = 1013,
  EEOF = 1014,
  EUNUSED = 1015,
  ESSL = 1016,
  EH2RUNOUTSTREAMS = 1017,
  EREJECT = 1018,
  EINTERNAL = 2001,
  ERESPONSE = 2002,
  ELOGOFF = 2003,
  ELIMIT = 2004,
  ECLOSE = 2005,
  EITP = 2006,
  ERDMA = 3001,
  ERDMAMEM = 3002
};
bool Errno_IsValid(int value);
const Errno Errno_MIN = ENOSERVICE;
const Errno Errno_MAX = ERDMAMEM;
const int Errno_ARRAYSIZE = Errno_MAX + 1;

const ::google::protobuf::EnumDescriptor* Errno_descriptor();
inline const ::std::string& Errno_Name(Errno value) {
  return ::google::protobuf::internal::NameOfEnum(
    Errno_descriptor(), value);
}
inline bool Errno_Parse(
    const ::std::string& name, Errno* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Errno>(
    Errno_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace brpc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::brpc::Errno> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::brpc::Errno>() {
  return ::brpc::Errno_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_brpc_2ferrno_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/proto_base.proto

#ifndef PROTOBUF_INCLUDED_brpc_2fproto_5fbase_2eproto
#define PROTOBUF_INCLUDED_brpc_2fproto_5fbase_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_brpc_2fproto_5fbase_2eproto 

namespace protobuf_brpc_2fproto_5fbase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_brpc_2fproto_5fbase_2eproto
namespace brpc {
class EspMessageBase;
class EspMessageBaseDefaultTypeInternal;
extern EspMessageBaseDefaultTypeInternal _EspMessageBase_default_instance_;
class MemcacheRequestBase;
class MemcacheRequestBaseDefaultTypeInternal;
extern MemcacheRequestBaseDefaultTypeInternal _MemcacheRequestBase_default_instance_;
class MemcacheResponseBase;
class MemcacheResponseBaseDefaultTypeInternal;
extern MemcacheResponseBaseDefaultTypeInternal _MemcacheResponseBase_default_instance_;
class NsheadMessageBase;
class NsheadMessageBaseDefaultTypeInternal;
extern NsheadMessageBaseDefaultTypeInternal _NsheadMessageBase_default_instance_;
class RedisRequestBase;
class RedisRequestBaseDefaultTypeInternal;
extern RedisRequestBaseDefaultTypeInternal _RedisRequestBase_default_instance_;
class RedisResponseBase;
class RedisResponseBaseDefaultTypeInternal;
extern RedisResponseBaseDefaultTypeInternal _RedisResponseBase_default_instance_;
class SerializedRequestBase;
class SerializedRequestBaseDefaultTypeInternal;
extern SerializedRequestBaseDefaultTypeInternal _SerializedRequestBase_default_instance_;
class ThriftFramedMessageBase;
class ThriftFramedMessageBaseDefaultTypeInternal;
extern ThriftFramedMessageBaseDefaultTypeInternal _ThriftFramedMessageBase_default_instance_;
}  // namespace brpc
namespace google {
namespace protobuf {
template<> ::brpc::EspMessageBase* Arena::CreateMaybeMessage<::brpc::EspMessageBase>(Arena*);
template<> ::brpc::MemcacheRequestBase* Arena::CreateMaybeMessage<::brpc::MemcacheRequestBase>(Arena*);
template<> ::brpc::MemcacheResponseBase* Arena::CreateMaybeMessage<::brpc::MemcacheResponseBase>(Arena*);
template<> ::brpc::NsheadMessageBase* Arena::CreateMaybeMessage<::brpc::NsheadMessageBase>(Arena*);
template<> ::brpc::RedisRequestBase* Arena::CreateMaybeMessage<::brpc::RedisRequestBase>(Arena*);
template<> ::brpc::RedisResponseBase* Arena::CreateMaybeMessage<::brpc::RedisResponseBase>(Arena*);
template<> ::brpc::SerializedRequestBase* Arena::CreateMaybeMessage<::brpc::SerializedRequestBase>(Arena*);
template<> ::brpc::ThriftFramedMessageBase* Arena::CreateMaybeMessage<::brpc::ThriftFramedMessageBase>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace brpc {

// ===================================================================

class RedisRequestBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.RedisRequestBase) */ {
 public:
  RedisRequestBase();
  virtual ~RedisRequestBase();

  RedisRequestBase(const RedisRequestBase& from);

  inline RedisRequestBase& operator=(const RedisRequestBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedisRequestBase(RedisRequestBase&& from) noexcept
    : RedisRequestBase() {
    *this = ::std::move(from);
  }

  inline RedisRequestBase& operator=(RedisRequestBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedisRequestBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RedisRequestBase* internal_default_instance() {
    return reinterpret_cast<const RedisRequestBase*>(
               &_RedisRequestBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RedisRequestBase* other);
  friend void swap(RedisRequestBase& a, RedisRequestBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedisRequestBase* New() const final {
    return CreateMaybeMessage<RedisRequestBase>(NULL);
  }

  RedisRequestBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RedisRequestBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RedisRequestBase& from);
  void MergeFrom(const RedisRequestBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RedisRequestBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:brpc.RedisRequestBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brpc_2fproto_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedisResponseBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.RedisResponseBase) */ {
 public:
  RedisResponseBase();
  virtual ~RedisResponseBase();

  RedisResponseBase(const RedisResponseBase& from);

  inline RedisResponseBase& operator=(const RedisResponseBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedisResponseBase(RedisResponseBase&& from) noexcept
    : RedisResponseBase() {
    *this = ::std::move(from);
  }

  inline RedisResponseBase& operator=(RedisResponseBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedisResponseBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RedisResponseBase* internal_default_instance() {
    return reinterpret_cast<const RedisResponseBase*>(
               &_RedisResponseBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RedisResponseBase* other);
  friend void swap(RedisResponseBase& a, RedisResponseBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedisResponseBase* New() const final {
    return CreateMaybeMessage<RedisResponseBase>(NULL);
  }

  RedisResponseBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RedisResponseBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RedisResponseBase& from);
  void MergeFrom(const RedisResponseBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RedisResponseBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:brpc.RedisResponseBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brpc_2fproto_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EspMessageBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.EspMessageBase) */ {
 public:
  EspMessageBase();
  virtual ~EspMessageBase();

  EspMessageBase(const EspMessageBase& from);

  inline EspMessageBase& operator=(const EspMessageBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EspMessageBase(EspMessageBase&& from) noexcept
    : EspMessageBase() {
    *this = ::std::move(from);
  }

  inline EspMessageBase& operator=(EspMessageBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EspMessageBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EspMessageBase* internal_default_instance() {
    return reinterpret_cast<const EspMessageBase*>(
               &_EspMessageBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(EspMessageBase* other);
  friend void swap(EspMessageBase& a, EspMessageBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EspMessageBase* New() const final {
    return CreateMaybeMessage<EspMessageBase>(NULL);
  }

  EspMessageBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EspMessageBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EspMessageBase& from);
  void MergeFrom(const EspMessageBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EspMessageBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:brpc.EspMessageBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brpc_2fproto_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MemcacheRequestBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.MemcacheRequestBase) */ {
 public:
  MemcacheRequestBase();
  virtual ~MemcacheRequestBase();

  MemcacheRequestBase(const MemcacheRequestBase& from);

  inline MemcacheRequestBase& operator=(const MemcacheRequestBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MemcacheRequestBase(MemcacheRequestBase&& from) noexcept
    : MemcacheRequestBase() {
    *this = ::std::move(from);
  }

  inline MemcacheRequestBase& operator=(MemcacheRequestBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemcacheRequestBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemcacheRequestBase* internal_default_instance() {
    return reinterpret_cast<const MemcacheRequestBase*>(
               &_MemcacheRequestBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MemcacheRequestBase* other);
  friend void swap(MemcacheRequestBase& a, MemcacheRequestBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MemcacheRequestBase* New() const final {
    return CreateMaybeMessage<MemcacheRequestBase>(NULL);
  }

  MemcacheRequestBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MemcacheRequestBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MemcacheRequestBase& from);
  void MergeFrom(const MemcacheRequestBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemcacheRequestBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:brpc.MemcacheRequestBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brpc_2fproto_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MemcacheResponseBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.MemcacheResponseBase) */ {
 public:
  MemcacheResponseBase();
  virtual ~MemcacheResponseBase();

  MemcacheResponseBase(const MemcacheResponseBase& from);

  inline MemcacheResponseBase& operator=(const MemcacheResponseBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MemcacheResponseBase(MemcacheResponseBase&& from) noexcept
    : MemcacheResponseBase() {
    *this = ::std::move(from);
  }

  inline MemcacheResponseBase& operator=(MemcacheResponseBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemcacheResponseBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemcacheResponseBase* internal_default_instance() {
    return reinterpret_cast<const MemcacheResponseBase*>(
               &_MemcacheResponseBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MemcacheResponseBase* other);
  friend void swap(MemcacheResponseBase& a, MemcacheResponseBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MemcacheResponseBase* New() const final {
    return CreateMaybeMessage<MemcacheResponseBase>(NULL);
  }

  MemcacheResponseBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MemcacheResponseBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MemcacheResponseBase& from);
  void MergeFrom(const MemcacheResponseBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemcacheResponseBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:brpc.MemcacheResponseBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brpc_2fproto_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NsheadMessageBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.NsheadMessageBase) */ {
 public:
  NsheadMessageBase();
  virtual ~NsheadMessageBase();

  NsheadMessageBase(const NsheadMessageBase& from);

  inline NsheadMessageBase& operator=(const NsheadMessageBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NsheadMessageBase(NsheadMessageBase&& from) noexcept
    : NsheadMessageBase() {
    *this = ::std::move(from);
  }

  inline NsheadMessageBase& operator=(NsheadMessageBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NsheadMessageBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NsheadMessageBase* internal_default_instance() {
    return reinterpret_cast<const NsheadMessageBase*>(
               &_NsheadMessageBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(NsheadMessageBase* other);
  friend void swap(NsheadMessageBase& a, NsheadMessageBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NsheadMessageBase* New() const final {
    return CreateMaybeMessage<NsheadMessageBase>(NULL);
  }

  NsheadMessageBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NsheadMessageBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NsheadMessageBase& from);
  void MergeFrom(const NsheadMessageBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NsheadMessageBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:brpc.NsheadMessageBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brpc_2fproto_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedRequestBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.SerializedRequestBase) */ {
 public:
  SerializedRequestBase();
  virtual ~SerializedRequestBase();

  SerializedRequestBase(const SerializedRequestBase& from);

  inline SerializedRequestBase& operator=(const SerializedRequestBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedRequestBase(SerializedRequestBase&& from) noexcept
    : SerializedRequestBase() {
    *this = ::std::move(from);
  }

  inline SerializedRequestBase& operator=(SerializedRequestBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedRequestBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedRequestBase* internal_default_instance() {
    return reinterpret_cast<const SerializedRequestBase*>(
               &_SerializedRequestBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(SerializedRequestBase* other);
  friend void swap(SerializedRequestBase& a, SerializedRequestBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedRequestBase* New() const final {
    return CreateMaybeMessage<SerializedRequestBase>(NULL);
  }

  SerializedRequestBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedRequestBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedRequestBase& from);
  void MergeFrom(const SerializedRequestBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedRequestBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:brpc.SerializedRequestBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brpc_2fproto_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ThriftFramedMessageBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.ThriftFramedMessageBase) */ {
 public:
  ThriftFramedMessageBase();
  virtual ~ThriftFramedMessageBase();

  ThriftFramedMessageBase(const ThriftFramedMessageBase& from);

  inline ThriftFramedMessageBase& operator=(const ThriftFramedMessageBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ThriftFramedMessageBase(ThriftFramedMessageBase&& from) noexcept
    : ThriftFramedMessageBase() {
    *this = ::std::move(from);
  }

  inline ThriftFramedMessageBase& operator=(ThriftFramedMessageBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThriftFramedMessageBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ThriftFramedMessageBase* internal_default_instance() {
    return reinterpret_cast<const ThriftFramedMessageBase*>(
               &_ThriftFramedMessageBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ThriftFramedMessageBase* other);
  friend void swap(ThriftFramedMessageBase& a, ThriftFramedMessageBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ThriftFramedMessageBase* New() const final {
    return CreateMaybeMessage<ThriftFramedMessageBase>(NULL);
  }

  ThriftFramedMessageBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ThriftFramedMessageBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ThriftFramedMessageBase& from);
  void MergeFrom(const ThriftFramedMessageBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ThriftFramedMessageBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:brpc.ThriftFramedMessageBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brpc_2fproto_5fbase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RedisRequestBase

// -------------------------------------------------------------------

// RedisResponseBase

// -------------------------------------------------------------------

// EspMessageBase

// -------------------------------------------------------------------

// MemcacheRequestBase

// -------------------------------------------------------------------

// MemcacheResponseBase

// -------------------------------------------------------------------

// NsheadMessageBase

// -------------------------------------------------------------------

// SerializedRequestBase

// -------------------------------------------------------------------

// ThriftFramedMessageBase

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace brpc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_brpc_2fproto_5fbase_2eproto

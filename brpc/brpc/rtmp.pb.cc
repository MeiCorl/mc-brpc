// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/rtmp.proto

#include "brpc/rtmp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace brpc {
class RtmpConnectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtmpConnectRequest>
      _instance;
} _RtmpConnectRequest_default_instance_;
class RtmpConnectResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtmpConnectResponse>
      _instance;
} _RtmpConnectResponse_default_instance_;
class RtmpPlay2OptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtmpPlay2Options>
      _instance;
} _RtmpPlay2Options_default_instance_;
class RtmpInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtmpInfo>
      _instance;
} _RtmpInfo_default_instance_;
class RtmpEmptyObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RtmpEmptyObject>
      _instance;
} _RtmpEmptyObject_default_instance_;
}  // namespace brpc
namespace protobuf_brpc_2frtmp_2eproto {
static void InitDefaultsRtmpConnectRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RtmpConnectRequest_default_instance_;
    new (ptr) ::brpc::RtmpConnectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RtmpConnectRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RtmpConnectRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRtmpConnectRequest}, {}};

static void InitDefaultsRtmpConnectResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RtmpConnectResponse_default_instance_;
    new (ptr) ::brpc::RtmpConnectResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RtmpConnectResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RtmpConnectResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRtmpConnectResponse}, {}};

static void InitDefaultsRtmpPlay2Options() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RtmpPlay2Options_default_instance_;
    new (ptr) ::brpc::RtmpPlay2Options();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RtmpPlay2Options::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RtmpPlay2Options =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRtmpPlay2Options}, {}};

static void InitDefaultsRtmpInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RtmpInfo_default_instance_;
    new (ptr) ::brpc::RtmpInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RtmpInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RtmpInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRtmpInfo}, {}};

static void InitDefaultsRtmpEmptyObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::brpc::_RtmpEmptyObject_default_instance_;
    new (ptr) ::brpc::RtmpEmptyObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::brpc::RtmpEmptyObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RtmpEmptyObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRtmpEmptyObject}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RtmpConnectRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RtmpConnectResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RtmpPlay2Options.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RtmpInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RtmpEmptyObject.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, app_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, flashver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, swfurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, tcurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, fpad_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, audiocodecs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, videocodecs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, videofunction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, pageurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, objectencoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectRequest, stream_multiplexing_),
  0,
  1,
  2,
  3,
  10,
  5,
  6,
  7,
  8,
  4,
  9,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectResponse, fmsver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectResponse, capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectResponse, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpConnectResponse, create_stream_with_play_or_publish_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpPlay2Options, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpPlay2Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpPlay2Options, len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpPlay2Options, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpPlay2Options, oldstreamname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpPlay2Options, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpPlay2Options, streamname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpPlay2Options, transition_),
  3,
  4,
  0,
  5,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpInfo, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpInfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpInfo, objectencoding_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpEmptyObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::brpc::RtmpEmptyObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::brpc::RtmpConnectRequest)},
  { 29, 38, sizeof(::brpc::RtmpConnectResponse)},
  { 42, 53, sizeof(::brpc::RtmpPlay2Options)},
  { 59, 68, sizeof(::brpc::RtmpInfo)},
  { 72, 77, sizeof(::brpc::RtmpEmptyObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RtmpConnectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RtmpConnectResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RtmpPlay2Options_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RtmpInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::brpc::_RtmpEmptyObject_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "brpc/rtmp.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017brpc/rtmp.proto\022\004brpc\"\375\001\n\022RtmpConnectR"
      "equest\022\013\n\003app\030\001 \001(\t\022\020\n\010flashVer\030\002 \001(\t\022\016\n"
      "\006swfUrl\030\003 \001(\t\022\r\n\005tcUrl\030\004 \001(\t\022\014\n\004fpad\030\005 \001"
      "(\010\022\024\n\014capabilities\030\006 \001(\001\022\023\n\013audioCodecs\030"
      "\007 \001(\001\022\023\n\013videoCodecs\030\010 \001(\001\022\025\n\rvideoFunct"
      "ion\030\t \001(\001\022\017\n\007pageUrl\030\n \001(\t\022\026\n\016objectEnco"
      "ding\030\013 \001(\001\022\033\n\023stream_multiplexing\030\014 \001(\010\""
      "u\n\023RtmpConnectResponse\022\016\n\006fmsVer\030\001 \001(\t\022\024"
      "\n\014capabilities\030\002 \001(\001\022\014\n\004mode\030\003 \001(\001\022*\n\"cr"
      "eate_stream_with_play_or_publish\030\004 \001(\010\"}"
      "\n\020RtmpPlay2Options\022\013\n\003len\030\001 \001(\001\022\016\n\006offse"
      "t\030\002 \001(\001\022\025\n\roldStreamName\030\003 \001(\t\022\r\n\005start\030"
      "\004 \001(\001\022\022\n\nstreamName\030\005 \001(\t\022\022\n\ntransition\030"
      "\006 \001(\t\"T\n\010RtmpInfo\022\014\n\004code\030\001 \001(\t\022\r\n\005level"
      "\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\026\n\016objectEnc"
      "oding\030\004 \001(\001\"\021\n\017RtmpEmptyObject"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 630);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "brpc/rtmp.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_brpc_2frtmp_2eproto
namespace brpc {

// ===================================================================

void RtmpConnectRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtmpConnectRequest::kAppFieldNumber;
const int RtmpConnectRequest::kFlashVerFieldNumber;
const int RtmpConnectRequest::kSwfUrlFieldNumber;
const int RtmpConnectRequest::kTcUrlFieldNumber;
const int RtmpConnectRequest::kFpadFieldNumber;
const int RtmpConnectRequest::kCapabilitiesFieldNumber;
const int RtmpConnectRequest::kAudioCodecsFieldNumber;
const int RtmpConnectRequest::kVideoCodecsFieldNumber;
const int RtmpConnectRequest::kVideoFunctionFieldNumber;
const int RtmpConnectRequest::kPageUrlFieldNumber;
const int RtmpConnectRequest::kObjectEncodingFieldNumber;
const int RtmpConnectRequest::kStreamMultiplexingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtmpConnectRequest::RtmpConnectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2frtmp_2eproto::scc_info_RtmpConnectRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RtmpConnectRequest)
}
RtmpConnectRequest::RtmpConnectRequest(const RtmpConnectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app()) {
    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  flashver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_flashver()) {
    flashver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flashver_);
  }
  swfurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_swfurl()) {
    swfurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swfurl_);
  }
  tcurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tcurl()) {
    tcurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tcurl_);
  }
  pageurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pageurl()) {
    pageurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pageurl_);
  }
  ::memcpy(&capabilities_, &from.capabilities_,
    static_cast<size_t>(reinterpret_cast<char*>(&stream_multiplexing_) -
    reinterpret_cast<char*>(&capabilities_)) + sizeof(stream_multiplexing_));
  // @@protoc_insertion_point(copy_constructor:brpc.RtmpConnectRequest)
}

void RtmpConnectRequest::SharedCtor() {
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flashver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swfurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tcurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pageurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&capabilities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stream_multiplexing_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(stream_multiplexing_));
}

RtmpConnectRequest::~RtmpConnectRequest() {
  // @@protoc_insertion_point(destructor:brpc.RtmpConnectRequest)
  SharedDtor();
}

void RtmpConnectRequest::SharedDtor() {
  app_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flashver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swfurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tcurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pageurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RtmpConnectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RtmpConnectRequest::descriptor() {
  ::protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtmpConnectRequest& RtmpConnectRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2frtmp_2eproto::scc_info_RtmpConnectRequest.base);
  return *internal_default_instance();
}


void RtmpConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RtmpConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      app_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      flashver_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      swfurl_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      tcurl_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      pageurl_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&capabilities_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&videocodecs_) -
        reinterpret_cast<char*>(&capabilities_)) + sizeof(videocodecs_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&videofunction_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stream_multiplexing_) -
        reinterpret_cast<char*>(&videofunction_)) + sizeof(stream_multiplexing_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtmpConnectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RtmpConnectRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app().data(), static_cast<int>(this->app().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpConnectRequest.app");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string flashVer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flashver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->flashver().data(), static_cast<int>(this->flashver().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpConnectRequest.flashVer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string swfUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_swfurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->swfurl().data(), static_cast<int>(this->swfurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpConnectRequest.swfUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tcUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tcurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tcurl().data(), static_cast<int>(this->tcurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpConnectRequest.tcUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool fpad = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_fpad();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fpad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double capabilities = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_capabilities();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &capabilities_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double audioCodecs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_audiocodecs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &audiocodecs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double videoCodecs = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_videocodecs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &videocodecs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double videoFunction = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_videofunction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &videofunction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pageUrl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pageurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pageurl().data(), static_cast<int>(this->pageurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpConnectRequest.pageUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double objectEncoding = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_objectencoding();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objectencoding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool stream_multiplexing = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_stream_multiplexing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stream_multiplexing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RtmpConnectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RtmpConnectRequest)
  return false;
#undef DO_
}

void RtmpConnectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RtmpConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string app = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app(), output);
  }

  // optional string flashVer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flashver().data(), static_cast<int>(this->flashver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.flashVer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->flashver(), output);
  }

  // optional string swfUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->swfurl().data(), static_cast<int>(this->swfurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.swfUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->swfurl(), output);
  }

  // optional string tcUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tcurl().data(), static_cast<int>(this->tcurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.tcUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tcurl(), output);
  }

  // optional bool fpad = 5;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->fpad(), output);
  }

  // optional double capabilities = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->capabilities(), output);
  }

  // optional double audioCodecs = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->audiocodecs(), output);
  }

  // optional double videoCodecs = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->videocodecs(), output);
  }

  // optional double videoFunction = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->videofunction(), output);
  }

  // optional string pageUrl = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pageurl().data(), static_cast<int>(this->pageurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.pageUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->pageurl(), output);
  }

  // optional double objectEncoding = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->objectencoding(), output);
  }

  // optional bool stream_multiplexing = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->stream_multiplexing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RtmpConnectRequest)
}

::google::protobuf::uint8* RtmpConnectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RtmpConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string app = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app(), target);
  }

  // optional string flashVer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flashver().data(), static_cast<int>(this->flashver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.flashVer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->flashver(), target);
  }

  // optional string swfUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->swfurl().data(), static_cast<int>(this->swfurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.swfUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->swfurl(), target);
  }

  // optional string tcUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tcurl().data(), static_cast<int>(this->tcurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.tcUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tcurl(), target);
  }

  // optional bool fpad = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->fpad(), target);
  }

  // optional double capabilities = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->capabilities(), target);
  }

  // optional double audioCodecs = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->audiocodecs(), target);
  }

  // optional double videoCodecs = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->videocodecs(), target);
  }

  // optional double videoFunction = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->videofunction(), target);
  }

  // optional string pageUrl = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pageurl().data(), static_cast<int>(this->pageurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectRequest.pageUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->pageurl(), target);
  }

  // optional double objectEncoding = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->objectencoding(), target);
  }

  // optional bool stream_multiplexing = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->stream_multiplexing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RtmpConnectRequest)
  return target;
}

size_t RtmpConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RtmpConnectRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string app = 1;
    if (has_app()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app());
    }

    // optional string flashVer = 2;
    if (has_flashver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->flashver());
    }

    // optional string swfUrl = 3;
    if (has_swfurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->swfurl());
    }

    // optional string tcUrl = 4;
    if (has_tcurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tcurl());
    }

    // optional string pageUrl = 10;
    if (has_pageurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pageurl());
    }

    // optional double capabilities = 6;
    if (has_capabilities()) {
      total_size += 1 + 8;
    }

    // optional double audioCodecs = 7;
    if (has_audiocodecs()) {
      total_size += 1 + 8;
    }

    // optional double videoCodecs = 8;
    if (has_videocodecs()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional double videoFunction = 9;
    if (has_videofunction()) {
      total_size += 1 + 8;
    }

    // optional double objectEncoding = 11;
    if (has_objectencoding()) {
      total_size += 1 + 8;
    }

    // optional bool fpad = 5;
    if (has_fpad()) {
      total_size += 1 + 1;
    }

    // optional bool stream_multiplexing = 12;
    if (has_stream_multiplexing()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RtmpConnectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RtmpConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RtmpConnectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtmpConnectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RtmpConnectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RtmpConnectRequest)
    MergeFrom(*source);
  }
}

void RtmpConnectRequest::MergeFrom(const RtmpConnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RtmpConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_app();
      app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_flashver();
      flashver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flashver_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_swfurl();
      swfurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swfurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_tcurl();
      tcurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tcurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_pageurl();
      pageurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pageurl_);
    }
    if (cached_has_bits & 0x00000020u) {
      capabilities_ = from.capabilities_;
    }
    if (cached_has_bits & 0x00000040u) {
      audiocodecs_ = from.audiocodecs_;
    }
    if (cached_has_bits & 0x00000080u) {
      videocodecs_ = from.videocodecs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      videofunction_ = from.videofunction_;
    }
    if (cached_has_bits & 0x00000200u) {
      objectencoding_ = from.objectencoding_;
    }
    if (cached_has_bits & 0x00000400u) {
      fpad_ = from.fpad_;
    }
    if (cached_has_bits & 0x00000800u) {
      stream_multiplexing_ = from.stream_multiplexing_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RtmpConnectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RtmpConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtmpConnectRequest::CopyFrom(const RtmpConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RtmpConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtmpConnectRequest::IsInitialized() const {
  return true;
}

void RtmpConnectRequest::Swap(RtmpConnectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtmpConnectRequest::InternalSwap(RtmpConnectRequest* other) {
  using std::swap;
  app_.Swap(&other->app_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  flashver_.Swap(&other->flashver_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swfurl_.Swap(&other->swfurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tcurl_.Swap(&other->tcurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pageurl_.Swap(&other->pageurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(capabilities_, other->capabilities_);
  swap(audiocodecs_, other->audiocodecs_);
  swap(videocodecs_, other->videocodecs_);
  swap(videofunction_, other->videofunction_);
  swap(objectencoding_, other->objectencoding_);
  swap(fpad_, other->fpad_);
  swap(stream_multiplexing_, other->stream_multiplexing_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RtmpConnectRequest::GetMetadata() const {
  protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtmpConnectResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtmpConnectResponse::kFmsVerFieldNumber;
const int RtmpConnectResponse::kCapabilitiesFieldNumber;
const int RtmpConnectResponse::kModeFieldNumber;
const int RtmpConnectResponse::kCreateStreamWithPlayOrPublishFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtmpConnectResponse::RtmpConnectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2frtmp_2eproto::scc_info_RtmpConnectResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RtmpConnectResponse)
}
RtmpConnectResponse::RtmpConnectResponse(const RtmpConnectResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fmsver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fmsver()) {
    fmsver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fmsver_);
  }
  ::memcpy(&capabilities_, &from.capabilities_,
    static_cast<size_t>(reinterpret_cast<char*>(&create_stream_with_play_or_publish_) -
    reinterpret_cast<char*>(&capabilities_)) + sizeof(create_stream_with_play_or_publish_));
  // @@protoc_insertion_point(copy_constructor:brpc.RtmpConnectResponse)
}

void RtmpConnectResponse::SharedCtor() {
  fmsver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&capabilities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_stream_with_play_or_publish_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(create_stream_with_play_or_publish_));
}

RtmpConnectResponse::~RtmpConnectResponse() {
  // @@protoc_insertion_point(destructor:brpc.RtmpConnectResponse)
  SharedDtor();
}

void RtmpConnectResponse::SharedDtor() {
  fmsver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RtmpConnectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RtmpConnectResponse::descriptor() {
  ::protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtmpConnectResponse& RtmpConnectResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2frtmp_2eproto::scc_info_RtmpConnectResponse.base);
  return *internal_default_instance();
}


void RtmpConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RtmpConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    fmsver_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&capabilities_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&create_stream_with_play_or_publish_) -
        reinterpret_cast<char*>(&capabilities_)) + sizeof(create_stream_with_play_or_publish_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtmpConnectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RtmpConnectResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fmsVer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fmsver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fmsver().data(), static_cast<int>(this->fmsver().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpConnectResponse.fmsVer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double capabilities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_capabilities();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &capabilities_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool create_stream_with_play_or_publish = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_create_stream_with_play_or_publish();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_stream_with_play_or_publish_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RtmpConnectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RtmpConnectResponse)
  return false;
#undef DO_
}

void RtmpConnectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RtmpConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fmsVer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fmsver().data(), static_cast<int>(this->fmsver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectResponse.fmsVer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fmsver(), output);
  }

  // optional double capabilities = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->capabilities(), output);
  }

  // optional double mode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->mode(), output);
  }

  // optional bool create_stream_with_play_or_publish = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->create_stream_with_play_or_publish(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RtmpConnectResponse)
}

::google::protobuf::uint8* RtmpConnectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RtmpConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fmsVer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fmsver().data(), static_cast<int>(this->fmsver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpConnectResponse.fmsVer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fmsver(), target);
  }

  // optional double capabilities = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->capabilities(), target);
  }

  // optional double mode = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->mode(), target);
  }

  // optional bool create_stream_with_play_or_publish = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->create_stream_with_play_or_publish(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RtmpConnectResponse)
  return target;
}

size_t RtmpConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RtmpConnectResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string fmsVer = 1;
    if (has_fmsver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fmsver());
    }

    // optional double capabilities = 2;
    if (has_capabilities()) {
      total_size += 1 + 8;
    }

    // optional double mode = 3;
    if (has_mode()) {
      total_size += 1 + 8;
    }

    // optional bool create_stream_with_play_or_publish = 4;
    if (has_create_stream_with_play_or_publish()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RtmpConnectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RtmpConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RtmpConnectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtmpConnectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RtmpConnectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RtmpConnectResponse)
    MergeFrom(*source);
  }
}

void RtmpConnectResponse::MergeFrom(const RtmpConnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RtmpConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fmsver();
      fmsver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fmsver_);
    }
    if (cached_has_bits & 0x00000002u) {
      capabilities_ = from.capabilities_;
    }
    if (cached_has_bits & 0x00000004u) {
      mode_ = from.mode_;
    }
    if (cached_has_bits & 0x00000008u) {
      create_stream_with_play_or_publish_ = from.create_stream_with_play_or_publish_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RtmpConnectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RtmpConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtmpConnectResponse::CopyFrom(const RtmpConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RtmpConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtmpConnectResponse::IsInitialized() const {
  return true;
}

void RtmpConnectResponse::Swap(RtmpConnectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtmpConnectResponse::InternalSwap(RtmpConnectResponse* other) {
  using std::swap;
  fmsver_.Swap(&other->fmsver_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(capabilities_, other->capabilities_);
  swap(mode_, other->mode_);
  swap(create_stream_with_play_or_publish_, other->create_stream_with_play_or_publish_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RtmpConnectResponse::GetMetadata() const {
  protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtmpPlay2Options::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtmpPlay2Options::kLenFieldNumber;
const int RtmpPlay2Options::kOffsetFieldNumber;
const int RtmpPlay2Options::kOldStreamNameFieldNumber;
const int RtmpPlay2Options::kStartFieldNumber;
const int RtmpPlay2Options::kStreamNameFieldNumber;
const int RtmpPlay2Options::kTransitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtmpPlay2Options::RtmpPlay2Options()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2frtmp_2eproto::scc_info_RtmpPlay2Options.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RtmpPlay2Options)
}
RtmpPlay2Options::RtmpPlay2Options(const RtmpPlay2Options& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldstreamname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oldstreamname()) {
    oldstreamname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldstreamname_);
  }
  streamname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_streamname()) {
    streamname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streamname_);
  }
  transition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_transition()) {
    transition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transition_);
  }
  ::memcpy(&len_, &from.len_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_) -
    reinterpret_cast<char*>(&len_)) + sizeof(start_));
  // @@protoc_insertion_point(copy_constructor:brpc.RtmpPlay2Options)
}

void RtmpPlay2Options::SharedCtor() {
  oldstreamname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streamname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&len_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_) -
      reinterpret_cast<char*>(&len_)) + sizeof(start_));
}

RtmpPlay2Options::~RtmpPlay2Options() {
  // @@protoc_insertion_point(destructor:brpc.RtmpPlay2Options)
  SharedDtor();
}

void RtmpPlay2Options::SharedDtor() {
  oldstreamname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streamname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RtmpPlay2Options::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RtmpPlay2Options::descriptor() {
  ::protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtmpPlay2Options& RtmpPlay2Options::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2frtmp_2eproto::scc_info_RtmpPlay2Options.base);
  return *internal_default_instance();
}


void RtmpPlay2Options::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RtmpPlay2Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      oldstreamname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      streamname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      transition_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&len_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_) -
        reinterpret_cast<char*>(&len_)) + sizeof(start_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtmpPlay2Options::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RtmpPlay2Options)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double len = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string oldStreamName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldstreamname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oldstreamname().data(), static_cast<int>(this->oldstreamname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpPlay2Options.oldStreamName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double start = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string streamName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_streamname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->streamname().data(), static_cast<int>(this->streamname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpPlay2Options.streamName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string transition = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transition().data(), static_cast<int>(this->transition().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpPlay2Options.transition");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RtmpPlay2Options)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RtmpPlay2Options)
  return false;
#undef DO_
}

void RtmpPlay2Options::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RtmpPlay2Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double len = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->len(), output);
  }

  // optional double offset = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->offset(), output);
  }

  // optional string oldStreamName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oldstreamname().data(), static_cast<int>(this->oldstreamname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpPlay2Options.oldStreamName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oldstreamname(), output);
  }

  // optional double start = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->start(), output);
  }

  // optional string streamName = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->streamname().data(), static_cast<int>(this->streamname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpPlay2Options.streamName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->streamname(), output);
  }

  // optional string transition = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transition().data(), static_cast<int>(this->transition().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpPlay2Options.transition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->transition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RtmpPlay2Options)
}

::google::protobuf::uint8* RtmpPlay2Options::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RtmpPlay2Options)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double len = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->len(), target);
  }

  // optional double offset = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->offset(), target);
  }

  // optional string oldStreamName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oldstreamname().data(), static_cast<int>(this->oldstreamname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpPlay2Options.oldStreamName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oldstreamname(), target);
  }

  // optional double start = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->start(), target);
  }

  // optional string streamName = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->streamname().data(), static_cast<int>(this->streamname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpPlay2Options.streamName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->streamname(), target);
  }

  // optional string transition = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transition().data(), static_cast<int>(this->transition().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpPlay2Options.transition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->transition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RtmpPlay2Options)
  return target;
}

size_t RtmpPlay2Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RtmpPlay2Options)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string oldStreamName = 3;
    if (has_oldstreamname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldstreamname());
    }

    // optional string streamName = 5;
    if (has_streamname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->streamname());
    }

    // optional string transition = 6;
    if (has_transition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transition());
    }

    // optional double len = 1;
    if (has_len()) {
      total_size += 1 + 8;
    }

    // optional double offset = 2;
    if (has_offset()) {
      total_size += 1 + 8;
    }

    // optional double start = 4;
    if (has_start()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RtmpPlay2Options::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RtmpPlay2Options)
  GOOGLE_DCHECK_NE(&from, this);
  const RtmpPlay2Options* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtmpPlay2Options>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RtmpPlay2Options)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RtmpPlay2Options)
    MergeFrom(*source);
  }
}

void RtmpPlay2Options::MergeFrom(const RtmpPlay2Options& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RtmpPlay2Options)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_oldstreamname();
      oldstreamname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldstreamname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_streamname();
      streamname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streamname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_transition();
      transition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transition_);
    }
    if (cached_has_bits & 0x00000008u) {
      len_ = from.len_;
    }
    if (cached_has_bits & 0x00000010u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000020u) {
      start_ = from.start_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RtmpPlay2Options::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RtmpPlay2Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtmpPlay2Options::CopyFrom(const RtmpPlay2Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RtmpPlay2Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtmpPlay2Options::IsInitialized() const {
  return true;
}

void RtmpPlay2Options::Swap(RtmpPlay2Options* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtmpPlay2Options::InternalSwap(RtmpPlay2Options* other) {
  using std::swap;
  oldstreamname_.Swap(&other->oldstreamname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  streamname_.Swap(&other->streamname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transition_.Swap(&other->transition_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(len_, other->len_);
  swap(offset_, other->offset_);
  swap(start_, other->start_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RtmpPlay2Options::GetMetadata() const {
  protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtmpInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RtmpInfo::kCodeFieldNumber;
const int RtmpInfo::kLevelFieldNumber;
const int RtmpInfo::kDescriptionFieldNumber;
const int RtmpInfo::kObjectEncodingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtmpInfo::RtmpInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2frtmp_2eproto::scc_info_RtmpInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RtmpInfo)
}
RtmpInfo::RtmpInfo(const RtmpInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_level()) {
    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  objectencoding_ = from.objectencoding_;
  // @@protoc_insertion_point(copy_constructor:brpc.RtmpInfo)
}

void RtmpInfo::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objectencoding_ = 0;
}

RtmpInfo::~RtmpInfo() {
  // @@protoc_insertion_point(destructor:brpc.RtmpInfo)
  SharedDtor();
}

void RtmpInfo::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RtmpInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RtmpInfo::descriptor() {
  ::protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtmpInfo& RtmpInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2frtmp_2eproto::scc_info_RtmpInfo.base);
  return *internal_default_instance();
}


void RtmpInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RtmpInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      level_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
  }
  objectencoding_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtmpInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RtmpInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpInfo.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_level()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->level().data(), static_cast<int>(this->level().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpInfo.level");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "brpc.RtmpInfo.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double objectEncoding = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_objectencoding();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objectencoding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RtmpInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RtmpInfo)
  return false;
#undef DO_
}

void RtmpInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RtmpInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpInfo.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // optional string level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpInfo.level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->level(), output);
  }

  // optional string description = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpInfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional double objectEncoding = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->objectencoding(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RtmpInfo)
}

::google::protobuf::uint8* RtmpInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RtmpInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpInfo.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // optional string level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpInfo.level");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->level(), target);
  }

  // optional string description = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "brpc.RtmpInfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional double objectEncoding = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->objectencoding(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RtmpInfo)
  return target;
}

size_t RtmpInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RtmpInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->level());
    }

    // optional string description = 3;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional double objectEncoding = 4;
    if (has_objectencoding()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RtmpInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RtmpInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RtmpInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtmpInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RtmpInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RtmpInfo)
    MergeFrom(*source);
  }
}

void RtmpInfo::MergeFrom(const RtmpInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RtmpInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_level();
      level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000008u) {
      objectencoding_ = from.objectencoding_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RtmpInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RtmpInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtmpInfo::CopyFrom(const RtmpInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RtmpInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtmpInfo::IsInitialized() const {
  return true;
}

void RtmpInfo::Swap(RtmpInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtmpInfo::InternalSwap(RtmpInfo* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  level_.Swap(&other->level_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(objectencoding_, other->objectencoding_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RtmpInfo::GetMetadata() const {
  protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RtmpEmptyObject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RtmpEmptyObject::RtmpEmptyObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brpc_2frtmp_2eproto::scc_info_RtmpEmptyObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:brpc.RtmpEmptyObject)
}
RtmpEmptyObject::RtmpEmptyObject(const RtmpEmptyObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:brpc.RtmpEmptyObject)
}

void RtmpEmptyObject::SharedCtor() {
}

RtmpEmptyObject::~RtmpEmptyObject() {
  // @@protoc_insertion_point(destructor:brpc.RtmpEmptyObject)
  SharedDtor();
}

void RtmpEmptyObject::SharedDtor() {
}

void RtmpEmptyObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RtmpEmptyObject::descriptor() {
  ::protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RtmpEmptyObject& RtmpEmptyObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brpc_2frtmp_2eproto::scc_info_RtmpEmptyObject.base);
  return *internal_default_instance();
}


void RtmpEmptyObject::Clear() {
// @@protoc_insertion_point(message_clear_start:brpc.RtmpEmptyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RtmpEmptyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:brpc.RtmpEmptyObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:brpc.RtmpEmptyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:brpc.RtmpEmptyObject)
  return false;
#undef DO_
}

void RtmpEmptyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:brpc.RtmpEmptyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:brpc.RtmpEmptyObject)
}

::google::protobuf::uint8* RtmpEmptyObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:brpc.RtmpEmptyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:brpc.RtmpEmptyObject)
  return target;
}

size_t RtmpEmptyObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:brpc.RtmpEmptyObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RtmpEmptyObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:brpc.RtmpEmptyObject)
  GOOGLE_DCHECK_NE(&from, this);
  const RtmpEmptyObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RtmpEmptyObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:brpc.RtmpEmptyObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:brpc.RtmpEmptyObject)
    MergeFrom(*source);
  }
}

void RtmpEmptyObject::MergeFrom(const RtmpEmptyObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:brpc.RtmpEmptyObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RtmpEmptyObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:brpc.RtmpEmptyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtmpEmptyObject::CopyFrom(const RtmpEmptyObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:brpc.RtmpEmptyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtmpEmptyObject::IsInitialized() const {
  return true;
}

void RtmpEmptyObject::Swap(RtmpEmptyObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RtmpEmptyObject::InternalSwap(RtmpEmptyObject* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RtmpEmptyObject::GetMetadata() const {
  protobuf_brpc_2frtmp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brpc_2frtmp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace brpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RtmpConnectRequest* Arena::CreateMaybeMessage< ::brpc::RtmpConnectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RtmpConnectRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RtmpConnectResponse* Arena::CreateMaybeMessage< ::brpc::RtmpConnectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RtmpConnectResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RtmpPlay2Options* Arena::CreateMaybeMessage< ::brpc::RtmpPlay2Options >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RtmpPlay2Options >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RtmpInfo* Arena::CreateMaybeMessage< ::brpc::RtmpInfo >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RtmpInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::brpc::RtmpEmptyObject* Arena::CreateMaybeMessage< ::brpc::RtmpEmptyObject >(Arena* arena) {
  return Arena::CreateInternal< ::brpc::RtmpEmptyObject >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

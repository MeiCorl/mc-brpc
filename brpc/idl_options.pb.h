// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idl_options.proto

#ifndef PROTOBUF_INCLUDED_idl_5foptions_2eproto
#define PROTOBUF_INCLUDED_idl_5foptions_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_idl_5foptions_2eproto 

namespace protobuf_idl_5foptions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_idl_5foptions_2eproto

enum ConvertibleIdlType {
  IDL_AUTO = 0,
  IDL_INT8 = 1,
  IDL_INT16 = 2,
  IDL_INT32 = 3,
  IDL_INT64 = 4,
  IDL_UINT8 = 5,
  IDL_UINT16 = 6,
  IDL_UINT32 = 7,
  IDL_UINT64 = 8,
  IDL_BOOL = 9,
  IDL_FLOAT = 10,
  IDL_DOUBLE = 11,
  IDL_BINARY = 12,
  IDL_STRING = 13
};
bool ConvertibleIdlType_IsValid(int value);
const ConvertibleIdlType ConvertibleIdlType_MIN = IDL_AUTO;
const ConvertibleIdlType ConvertibleIdlType_MAX = IDL_STRING;
const int ConvertibleIdlType_ARRAYSIZE = ConvertibleIdlType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConvertibleIdlType_descriptor();
inline const ::std::string& ConvertibleIdlType_Name(ConvertibleIdlType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConvertibleIdlType_descriptor(), value);
}
inline bool ConvertibleIdlType_Parse(
    const ::std::string& name, ConvertibleIdlType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConvertibleIdlType>(
    ConvertibleIdlType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================

static const int kIdlSupportFieldNumber = 91000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  idl_support;
static const int kIdlTypeFieldNumber = 91001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::ConvertibleIdlType, ::ConvertibleIdlType_IsValid>, 14, false >
  idl_type;
static const int kIdlOnFieldNumber = 91002;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  idl_on;
static const int kIdlNameFieldNumber = 91003;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  idl_name;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ConvertibleIdlType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ConvertibleIdlType>() {
  return ::ConvertibleIdlType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_idl_5foptions_2eproto

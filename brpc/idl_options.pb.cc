// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idl_options.proto

#include "idl_options.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_idl_5foptions_2eproto {
void InitDefaults() {
}

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "idl_options.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021idl_options.proto\032 google/protobuf/des"
      "criptor.proto*\351\001\n\022ConvertibleIdlType\022\014\n\010"
      "IDL_AUTO\020\000\022\014\n\010IDL_INT8\020\001\022\r\n\tIDL_INT16\020\002\022"
      "\r\n\tIDL_INT32\020\003\022\r\n\tIDL_INT64\020\004\022\r\n\tIDL_UIN"
      "T8\020\005\022\016\n\nIDL_UINT16\020\006\022\016\n\nIDL_UINT32\020\007\022\016\n\n"
      "IDL_UINT64\020\010\022\014\n\010IDL_BOOL\020\t\022\r\n\tIDL_FLOAT\020"
      "\n\022\016\n\nIDL_DOUBLE\020\013\022\016\n\nIDL_BINARY\020\014\022\016\n\nIDL"
      "_STRING\020\r:3\n\013idl_support\022\034.google.protob"
      "uf.FileOptions\030\370\306\005 \001(\010:F\n\010idl_type\022\035.goo"
      "gle.protobuf.FieldOptions\030\371\306\005 \001(\0162\023.Conv"
      "ertibleIdlType:/\n\006idl_on\022\035.google.protob"
      "uf.FieldOptions\030\372\306\005 \001(\005:1\n\010idl_name\022\035.go"
      "ogle.protobuf.FieldOptions\030\373\306\005 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 514);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "idl_options.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_idl_5foptions_2eproto
const ::google::protobuf::EnumDescriptor* ConvertibleIdlType_descriptor() {
  protobuf_idl_5foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_idl_5foptions_2eproto::file_level_enum_descriptors[0];
}
bool ConvertibleIdlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  idl_support(kIdlSupportFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::ConvertibleIdlType, ::ConvertibleIdlType_IsValid>, 14, false >
  idl_type(kIdlTypeFieldNumber, static_cast< ::ConvertibleIdlType >(0));
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  idl_on(kIdlOnFieldNumber, 0);
const ::std::string idl_name_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  idl_name(kIdlNameFieldNumber, idl_name_default);

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

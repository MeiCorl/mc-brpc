syntax="proto3";
package test;

option cc_generic_services = true;

import "validator.proto";

enum ResCode {
    ResCode_Begin = 0;
    Success = 200;
    InValidParams = 400;
}

message UserInfo {
    uint64 uid = 1;
    uint32 age = 2 [(validator.Rule).uint32.lte = 150];
    string name = 3 [(validator.Rule).string.not_empty = true, (validator.Rule).string.max_len = 32];
    string phone = 4 [(validator.Rule).string = {not_empty: true, regex_pattern : "^(13[0-9]|14[0-9]|15[0-9]|16[0-9]|17[0-9]|18[0-9]|19[0-9])\\d{8}$"}];
    string email = 5 [(validator.Rule).string.regex_pattern = "^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$"];
    repeated string others = 6 [(validator.Rule).array.not_empty = true, (validator.Rule).array.min_len = 2];
}

message UpdateUserInfoReq {
    int32 seq_id = 1;
    repeated UserInfo infos = 2;
}

message UpdateUserInfoRes {
    uint64 seq_id = 1;
    ResCode res_code = 2;
    string res_msg = 3;
}

service TestService {
    rpc UpdateUserInfo (UpdateUserInfoReq) returns (UpdateUserInfoRes);
}
